@model UserInterface.Models.BankViewModel
@using UserInterface.App_Start
@{
    ViewBag.Title = "Bank";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
@section styles {
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatable")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatableButtons")

}
<div style="width:100%;">
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-cogs"></i> Settings</a></li>
        <li class="active">@ViewBag.Title</li>
    </ol>
</div>


<section class="content" id="main">
    <div class="row">
        <div class="" id="btnPatchAttributeSettab" style="min-height:25px">

            @{
                var data = new { ActionType = "List" };
                @Html.Action("ChangeButtonStyle", "Bank", data);
            }
        </div>
    </div>
    <div class="row summaryboxes">

        <div class="clearfix visible-sm-block"></div>

    </div>
    <div class="row">
        &nbsp;
    </div>
    <div class="row tableContainer">
        <div class="col-md-12">
            <table id="BankTable" class="table table-striped table-bordered table-hover customgrd" cellspacing="0" width="100%">
                <thead>
                    <tr class="text-center TableHead">
                        <th>Code</th>
                        <th>Name</th>
                        <th>Company</th> 
                        <th id="ODLimit">Actual OD Limit</th>
                        <th>OD Limit</th>                                      
                        <th>...</th>

                    </tr>
                </thead>
            </table>
        </div>
    </div>

</section>

<section class="content">


    <div id="myNav" class="overlay">



        <div class="overlay-content">

            <div class="row" id="OverlayHeader">
                <div class="col-md-6" style="text-align:left">
                    <span id="lblInvoiceNo" class="SCHeader">Bank</span>
                </div>
                <div class="col-md-6" id="btnPatchAdd" style="min-height:25px; padding-right:25px;">

                    @{
                        var data1 = new { ActionType = "Add" };
                        @Html.Action("ChangeButtonStyle", "Bank", data1);
                    }
                </div>
            </div>

            <div class="EntryForms" style="height:550px">
                @using (Ajax.BeginForm("InsertUpdateBank", "Bank", new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "SaveSuccess", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form", @id = "BankForm" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.isUpdate, htmlAttributes: new { @class = "", Value = "0" })
                    @Html.HiddenFor(model => model.hdnCode, htmlAttributes: new { @class = "", Value = "" })
                    @*<div class="col-md-12 headSeperator"><i class="fa fa-th ig-yellow" aria-hidden="true"></i> Basic Details</div>*@
                    <div class="col-md-12">
                        <div class="col-md-4">

                            <div class="form-group col-md-12">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label" })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control HeaderBox", @id = "Code", @autofocus = true } })
                                        @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1 mandatory"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>

                            <div class="form-group col-md-12">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label " })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control HeaderBox BlockEnter", @id = "Name" } })
                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1 mandatory"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>

                            <div class="form-group col-md-12">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.CompanyCode, htmlAttributes: new { @class = "control-label" })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                       @Html.DropDownListFor(model => model.CompanyCode, Model.CompaniesList, "-- Select Company --", new { @class = "form-control BlockEnter", value = -1, style = "padding:4px 12px;", @id = "CompanyCode" })
                                        @Html.ValidationMessageFor(model => model.CompanyCode, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>

                            <div class="form-group col-md-12">
                                @if (Model.ShowODLimit == true)
                                {
                                    <div class="col-md-12">

                                        @Html.LabelFor(model => model.ActualODLimit, htmlAttributes: new { @class = "control-label " })
                                    </div>
                                    <div class="col-md-12">
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.ActualODLimit, new { htmlAttributes = new { @class = "form-control HeaderBox BlockEnter", @id = "ActualODLimit", @style = "text-align: right", placeholder = "0.00", @onkeypress = "return isNumber(event)", @onfocus ="SelectAllValue(this)" } })
                                            @Html.ValidationMessageFor(model => model.ActualODLimit, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-1 mandatory"></div>
                                        <div class="col-md-1"></div>
                                    </div>
                                }
                            </div>
                            <div class="form-group col-md-12">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.DisplayODLimit, htmlAttributes: new { @class = "control-label " })
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.DisplayODLimit, new { htmlAttributes = new { @class = "form-control HeaderBox BlockEnter", @id = "DisplayODLimit", @style = "text-align: right", placeholder = "0.00", @onkeypress = "return isNumber(event)", @onfocus = "SelectAllValue(this)" } })
                                    </div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>

                        </div>
           
                    </div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                  
                  
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>

                    <div class="form-group" hidden="hidden">
                        <div class="col-md-offset-2 col-md-10">
                            <input id="btnInsertUpdateBank" type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>

                }
            </div>
        </div>

    </div>
    <div class="preloader" id="prelaoder">
        <div class="col-md-12">
            <div class="col-md-12">Loading </div>
            <div class="col-md-12" style="margin-left:5%;margin-top:-3%;"><img src="~/Content/images/loading.gif" class="preloaderImg" /></div>
        </div>

    </div>
</section>


@section Scripts {
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatable")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jsZip")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatableButtons")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jqueryunobtrusiveajaxvalidate")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/Bank")
}




