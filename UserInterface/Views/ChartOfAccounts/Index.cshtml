@model UserInterface.Models.ChartOfAccountsViewModel
@using UserInterface.App_Start
@{
    ViewBag.Title = "Chart Of Accounts";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}

@section styles {
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatable")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatableButtons")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatableSelect")


}

<div style="width:100%;">
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-cogs"></i> Settings</a></li>
        <li class="active">@ViewBag.Title</li>
    </ol>
</div>


<section class="content" id="main">
    <div class="row">
        <div class="" id="btnPatchAttributeSettab" style="min-height:25px">

            @{
                var data = new { ActionType = "List" };
                @Html.Action("ChangeButtonStyle", "ChartOfAccounts", data);
            }
        </div>
    </div>
    <div class="row summaryboxes">

        <div class="clearfix visible-sm-block"></div>

    </div>
    <div class="row">
        &nbsp;
    </div>
    <div class="row tableContainer">
        <div class="col-md-12">
            <table id="ChartOfAccountsTable" class="table table-striped table-bordered table-hover customgrd" cellspacing="0" width="100%">
                <thead>
                    <tr class="text-center TableHead">
                        <th>Code</th>
                        <th>Type</th>
                        <th>Type Description</th>                        
                        <th>Is Subtype Applicable</th>
                        <th>Is Purchase Applicable</th>
                        <th>Is Reverse</th>
                        <th>...</th>

                    </tr>
                </thead>
            </table>
        </div>
    </div>

</section>

<section class="content">


    <div id="myNav" class="overlay">



        <div class="overlay-content">

            <div class="row" id="OverlayHeader">
                <div class="col-md-6" style="text-align:left">
                    <span id="lblInvoiceNo" class="SCHeader">Chart Of Accounts</span>
                </div>
                <div class="col-md-6" id="btnPatchAdd" style="min-height:25px; padding-right:25px;">

                    @{
                        var data1 = new { ActionType = "Add" };
                        @Html.Action("ChangeButtonStyle", "ChartOfAccounts", data1);
                    }
                </div>
            </div>
            
            </div>
            <div class="EntryForms" style="height:550px">
                @using (Ajax.BeginForm("InsertUpdateChartOfAccounts", "ChartOfAccounts", new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "SaveSuccess", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form", @id = "ChartOfAccountsForm" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.isUpdate, htmlAttributes: new { @class = "", Value = "0" })
                    @Html.HiddenFor(model => model.hdnCode, htmlAttributes: new { @class = "", Value = "" })
                    @Html.HiddenFor(model => model.hdnType, htmlAttributes: new { @class = "", Value = "" })
                    @*<div class="col-md-12 headSeperator"><i class="fa fa-th ig-yellow" aria-hidden="true"></i> Basic Details</div>*@
                    <div class="col-md-12">
                        <div class="col-md-4">

                            <div class="form-group col-md-12">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label" })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control HeaderBox", @id = "Code", @autofocus = true } })
                                        @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>

                            <div class="form-group col-md-12">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label " })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                       @{
                                           List<SelectListItem> listType = new List<SelectListItem>();
                                           listType.Add(new SelectListItem
                                           { Text = "Expense", Value = "OE" });
                                           listType.Add(new SelectListItem
                                           { Text = "Other Income", Value = "OI" });
                                           //listType.Add(new SelectListItem
                                           //{ Text = "Purchase", Value = "PURCH" });
                                    }
                                    @Html.DropDownListFor(model => model.Type, listType, "-- Select Type --", new { @class = "form-control BlockEnter", value = -1, style = "padding:4px 12px;", @id = "Type" })
                                        @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>

                            <div class="form-group col-md-12">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.TypeDesc, htmlAttributes: new { @class = "control-label" })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.TypeDesc, new { htmlAttributes = new { @class = "form-control HeaderBox BlockEnter" } })
                                        @Html.ValidationMessageFor(model => model.TypeDesc, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>

                            <div class="form-group col-md-12">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.ISEmploy, htmlAttributes: new { @class = "control-label" })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.CheckBoxFor(model => model.ISEmploy, new { htmlAttributes = new { @class = "form-control HeaderBox BlockEnter" } })
                                        @Html.ValidationMessageFor(model => model.ISEmploy, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>

                            <div class="form-group col-md-12">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.IsReverse, htmlAttributes: new { @class = "control-label" })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.CheckBoxFor(model => model.IsReverse, new { htmlAttributes = new { @class = "form-control HeaderBox BlockEnter" } })
                                        @Html.ValidationMessageFor(model => model.IsReverse, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>
                            <div class="form-group col-md-12">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.IsPurchase, htmlAttributes: new { @class = "control-label" })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.CheckBoxFor(model => model.IsPurchase, new { htmlAttributes = new { @class = "form-control HeaderBox BlockEnter" } })
                                        @Html.ValidationMessageFor(model => model.IsPurchase, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>


                        </div>

                    </div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>


                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>

                    <div class="form-group" hidden="hidden">
                        <div class="col-md-offset-2 col-md-10">
                            <input id="btnInsertUpdateChartOfAccounts" type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>

                }
            </div>
        </div>

    </div>
    <div class="preloader" id="prelaoder">
        <div class="col-md-12">
            <div class="col-md-12">Loading </div>
            <div class="col-md-12" style="margin-left:5%;margin-top:-3%;"><img src="~/Content/images/loading.gif" class="preloaderImg" /></div>
        </div>

    </div>
</section>
<div class="modal fade" id="AddAssignChartOfAccountsModel" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document" style="min-width:300px !important;">
        <div class="modal-content" style="margin-top:4%;">
            <div class="modal-header" style="background-repeat: repeat;height: 36px;padding: 3px;border-bottom:2px solid rgb(149, 76, 132)!important;">
                <div class="container-fluid" style="padding-right: 0px;">
                    <div class="col-md-12">
                        <h3 class="modal-title SCHeader" id="modelContextLabel"></h3>
                        <div class="col-md-11">
                            <span style="font-weight: 600;font-size: 20px;" id="AddOrEditSpan">Assign Account Heads For Limited Expense Report</span>
                        </div>
                        <div class="col-md-1" style="padding-right: 4px;">

                            <a class="close" data-dismiss="modal" aria-label="Close"><i style="font-size: 33px;" class="fa fa-times-circle" aria-hidden="true"></i></a>
                        </div>
                    </div>
                   

                </div>
            </div>


            <div class="modal-body" style="min-height:510px !important;">
                <div class="container-fluid">
                    <div class="tab-pane fade in active" id="AssignmentList">
                        <div class="col-md-12"  style="overflow-y:auto;max-height:450px">
                            <table id="tblAssignmentList" class="table table-striped table-bordered table-hover" cellspacing="0" width="100%">
                                <thead>
                                    <tr class="text-center">
                                        <th></th>
                                        <th>Code</th>
                                        <th>Type</th>
                                        <th>Type Description</th>
                                    </tr>
                                </thead>
                            </table>

                        </div>
                    </div>
                </div>

            </div>
            <div class="modal-footer" style="background-image: url('content/images/73a6f1c8.png');background-repeat: repeat;height: 50px;padding: 7px;">
                <a class="btn btn-primary" onclick="SaveCheckedAssignments()" id="btnSave"><i class="glyphicon glyphicon-floppy-disk"></i>Assign</a>
            </div>
        </div>


    </div>
</div>


@section Scripts {
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatable")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatableSelect")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jsZip")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatableButtons")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jqueryunobtrusiveajaxvalidate")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/ChartOfAccounts")
}

