@model UserInterface.Models.CustomerInvoicesViewModel
@using UserInterface.App_Start

@{
    ViewBag.Title = "Customer Invoices";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}

@section styles {
  
@Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatable")
@Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatablecheckbox")
@Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatableSelect")
@Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatableButtons")


@Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/css/select2")

<style>
    .select2-container--default .select2-selection--single .select2-selection__rendered {
        line-height: 20px !important;
    }
</style>
}
<div style="width:100%;">
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-file-text-o"></i> Sales</a></li>
        <li class="active">@ViewBag.Title</li>
    </ol>
</div>
<!-- Main content -->
<section class="content" id="main">

    <div class="row">
        <div class="" id="btnPatchAttributeSettab"  style="min-height:25px;z-index:2">

            @{
                var data = new { ActionType = "List" };
                @Html.Action("ChangeButtonStyle", "CustomerInvoices", data);
            }
        </div>
    </div>
    <div class="row summaryboxes">
        <div class="col-md-3 col-sm-6 col-xs-12">
            <div class="info-box" style="cursor:pointer" onclick="Gridfilter('OD');">
                <span class="info-box-icon bg-yellow"><i class="ion ion-ios-people-outline"></i></span>

                <div class="info-box-content">
                    <span class="info-box-text">Overdue <b><span class="info-box-more" id="overdueamt">₹0.00</span></b></span>
                    <span class="info-box-more">Invoices <small><span id="overdueinvoice">0</span></small></span>
                </div>
                <!-- /.info-box-content -->
            </div>
            <!-- /.info-box -->
        </div>
        <div class="col-md-3 col-sm-6 col-xs-12">
            <div class="info-box" style="cursor:pointer" onclick="Gridfilter('OI');">
                <span class="info-box-icon bg-aqua"></span>

                <div class="info-box-content">
                    <span class="info-box-text">Open Invoices <b><span class="info-box-more" id="openamt">₹0.00</span></b></span>
                    <span class="info-box-more">Invoices <small><span id="openinvoice">0</span></small></span>
                </div>
                <!-- /.info-box-content -->
            </div>
            <!-- /.info-box -->
        </div>
        <!-- /.col -->
        <!-- /.col -->
        <!-- fix for small devices only -->
        <div class="clearfix visible-sm-block"></div>

        <div class="col-md-3 col-sm-6 col-xs-12">
            <div class="info-box" style="cursor:pointer" onclick="Gridfilter('FP');">
                <span class="info-box-icon bg-green"><i class="ion ion-ios-cart-outline"></i></span>

                <div class="info-box-content">
                    <span class="info-box-text">Fully Paid <b><span class="info-box-more" id="paidamt">₹0.00</span></b></span>
                    <span class="info-box-more">Invoices <small><span id="paidinvoice">0</span></small></span>
                </div>
                <!-- /.info-box-content -->
            </div>
            <!-- /.info-box -->
        </div>
        <!-- /.col -->
        <!-- /.col -->
    </div>

    <div class="col-md-12">
        <div id="filter" hidden="hidden" style="position:absolute;padding-top:0px;font-size:medium">
            <b>Filter:</b>
            <p id="ODfilter" style="padding-right:20px;font-size:medium" class="fa fa-th ig-yellow">Over Due</p>
            <p id="OIfilter" style="padding-right:20px;font-size:medium" class="fa fa-th ig-aqua">Open Invoices</p>
            <p id="FPfilter" style="padding-right:20px;font-size:medium" class="fa fa-th ig-green">Fully Paid</p>
        </div>

    </div>
  
    <div class="col-md-12">
        <div class="row">
            &nbsp;
            <p id="filter" style="float:right;font-size:small"><i class="fa fa-filter" aria-hidden="true" style="color:purple"></i><a href="#" class="accordion" data-toggle="collapse" data-target="#demo">Advanced Filter</a></p>

            <div id="demo" class="collapse" style="border-top:1px solid #d9d9d9">
                <div class="col-md-12">&nbsp;</div>
                    <div class="col-md-12">
                        <div class="col-md-3">
                            @Html.Label("From Date", htmlAttributes: new { @class = "control-label" })
                            <div class="col-md-12" style="padding:0">
                                @Html.TextBox("fromdate", "", new { @class = "form-control datepicker HeaderBox BlockEnter col-md-3", @Value = ViewBag.fromdate })

                            </div>
                        </div>
                        <div class="col-md-3">
                            @Html.Label("To Date", htmlAttributes: new { @class = "control-label" })
                            <div class="col-md-12" style="padding:0">
                                @Html.TextBox("todate", "", new { @class = "form-control datepicker HeaderBox BlockEnter col-md-3", @Value = ViewBag.todate })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="col-md-12" style="padding:0">
                                @Html.LabelFor(model => model.customerObj.ID, htmlAttributes: new { @class = "control-label " })
                            </div>
                            <div class="col-md-12" style="padding:0">
                                <div class="col-md-12" style="padding:0">
                                    @Html.DropDownListFor(model => model.customerObj.ID, Model.customerObj.CustomerList, "-- Select Customer --", new { @class = "form-control BlockEnter", @id = "Customerddl", @style = "width: 100%" })
                                    @Html.ValidationMessageFor(model => model.customerObj.ID, "", new { @class = "text-danger" })
                                </div>
                                @*<div class="col-md-1"></div>
                        <div class="col-md-1"></div>*@
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="col-md-12">
                            </div>
                        </div>
                    </div>
                <div class="col-md-12">&nbsp;</div>
                    <div class="col-md-12">
                        <div class="col-md-3">
                            <div class="col-md-12" style="padding:0">
                                @Html.LabelFor(model => model.InvoiceType, htmlAttributes: new { @class = "control-label " })
                            </div>
                            <div class="col-md-12" style="padding:0">
                                <div class="col-md-12" style="padding:0">
                                    @{
                                        List<SelectListItem> InvoiceTypesList = new List<SelectListItem>();
                                        InvoiceTypesList.Add(new SelectListItem
                                        { Text = "--Select InvoiceType--", Value = "", Selected = true });
                                        InvoiceTypesList.Add(new SelectListItem
                                        { Text = "Regular Invoice", Value = "RB" });
                                        InvoiceTypesList.Add(new SelectListItem
                                        { Text = "WB Invoice", Value = "WB" });
                                        InvoiceTypesList.Add(new SelectListItem
                                        { Text = "PB Invoice", Value = "PB" });
                                    }
                                    @Html.DropDownListFor(model => model.InvoiceType, InvoiceTypesList, new { @class = "form-control BlockEnter", style = "padding:4px 12px;width: 100 %", @id = "ddlInvoiceTypes", @onchange = "InvoicesTypeChange();" })
                                </div>
                                @*<div class="col-md-1"></div>
                        <div class="col-md-1"></div>*@
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="col-md-12" style="padding:0">
                                @Html.LabelFor(model => model.companiesObj.Code, htmlAttributes: new { @class = "control-label " })
                            </div>
                            <div class="col-md-12" style="padding:0">
                                <di-v class="col-md-12" style="padding:0">
                                    @Html.DropDownListFor(model => model.companiesObj.Code, Model.companiesObj.CompanyList, "-- Select Company --", new { @class = "form-control BlockEnter", value = -1, style = "padding:4px 12px;", @id = "Companyddl" })
                                    @Html.ValidationMessageFor(model => model.companiesObj.Code, "", new { @class = "text-danger" })
                                </di-v>
                                @*<div class="col-md-1"></div>
                        <div class="col-md-1"></div>*@
                            </div>

                        </div>
                        <div class="col-md-3">
                            <div class="col-md-12" style="padding:0">
                                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label " })
                            </div>
                            <div class="col-md-12" style="padding:0">
                                <div class="col-md-12" style="padding:0">
                                    @{
                                        List<SelectListItem> InvoiceTypesStatus = new List<SelectListItem>();
                                        InvoiceTypesStatus.Add(new SelectListItem
                                        { Text = "--Select Status--", Value = "", Selected = true });
                                        InvoiceTypesStatus.Add(new SelectListItem
                                        { Text = "Fully Paid", Value = "Fully Paid" });
                                        InvoiceTypesStatus.Add(new SelectListItem
                                        { Text = "Partialy Paid", Value = "Partialy Paid" });
                                        InvoiceTypesStatus.Add(new SelectListItem
                                        { Text = "Not Paid", Value = "Not Paid" });
                                    }
                                    @Html.DropDownListFor(model => model.Status, InvoiceTypesStatus, new { @class = "form-control BlockEnter", style = "padding:4px 12px;", @id = "ddlInvoiceTypesStatus" })
                                </div>
                                @*<div class="col-md-1"></div>
                        <div class="col-md-1"></div>*@
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="col-md-12">
                                <div class="col-md-10">
                                    <a class="btn btn-primary" style="right:-750px;margin-top:20px" id="btnadvancesearch" onclick="RefreshInvoicesAndSummary()">Apply</a>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.Search, htmlAttributes: new { @class = "control-label", style = "visibility:hidden" })
                        </div>
                        <div class="col-md-6" style="padding:0">
                            <div class="col-md-12">
                                <div class="input-group">
                                    <input type="text" class="form-control" placeholder="Search" id="search">
                                    <div class="input-group-btn">
                                        <button class="btn btn-default" type="submit" style="height:28px" onclick="RefreshInvoicesAndSummary()"><i class="glyphicon glyphicon-search"></i></button>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                </div>
        </div>
    <div class="row tableContainer">
        <div class="col-md-12" style="overflow-x:scroll">
            <table id="CustInvTable" class="table table-striped table-bordered table-hover customgrd" cellspacing="0" width="100%">
                <thead>
                    <tr class="text-center TableHead">
                        <th>ID</th>
                        <th>Invoice No</th>
                        <th>Invoice Date</th>
                        <th>Customer</th>
                        <th>Payment Due Date</th>
                        <th>Invoice Amount(₹)</th>
                        <th>Balance Due(₹)</th>
                        <th>Last Payment Date</th>
                        <th>Orgin Company</th>
                        <th>Status</th>
                        <th>...</th>

                    </tr>
                </thead>
            </table>
        </div>
    </div>


</section>
<section class="content">


    <div id="myNav" class="overlay">



        <div class="overlay-content">

            <div class="row" id="OverlayHeader">
                <div class="col-md-6" style="text-align:left">
                    <span id="lblInvoiceNo" class="SCHeader">New Invoice</span>
                </div>
                <div class="col-md-6" id="btnPatchAdd" style="min-height:25px; padding-right:25px;">

                    @{
                        var data1 = new { ActionType = "Add" };
                        @Html.Action("ChangeButtonStyle", "CustomerInvoices", data1);
                    }
                </div>
            </div>

            <div class="EntryForms" style="height:550px">
    @using (Ajax.BeginForm("InsertUpdateInvoice", "CustomerInvoices", new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "SaveSuccess", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form", @id = "CustomerInvoiceForm" }))
    {
        @Html.AntiForgeryToken()
        @Html.Hidden("BindValue", "", htmlAttributes: new { @class = "", Value = ViewBag.value });
        <div class="col-md-12 headSeperator"><i class="fa fa-th ig-yellow" aria-hidden="true"></i> Basic Details</div>
                    <div class="col-md-12">
                        <div class="col-md-8">
                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.InvoiceType, htmlAttributes: new { @class = "control-label " })
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @{
                                            List<SelectListItem> InvoiceTypeList = new List<SelectListItem>();
                                            InvoiceTypeList.Add(new SelectListItem
                                            { Text = "Regular Invoice", Value = "RB", Selected = true
                                            });
                                            InvoiceTypeList.Add(new SelectListItem
                                            { Text = "WB Invoice", Value = "WB"
                                            });
                                            InvoiceTypeList.Add(new SelectListItem
                                            { Text = "PB Invoice", Value = "PB"
                                            });
                                        }
                                        @Html.DropDownListFor(model => model.InvoiceType, InvoiceTypeList, new { @class = "form-control BlockEnter", style = "padding:4px 12px;", @id = "ddlInvoiceType", @onchange = "InvoicesTypeChange();" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>
                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.InvoiceNo, htmlAttributes: new { @class = "control-label" })
                                    @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "" })
                                    @Html.HiddenFor(model => model.hdfCustomerID, htmlAttributes: new { @class = "" })
                                    @Html.HiddenFor(model => model.hdnFileID, htmlAttributes: new { @class = "", @id = "hdnFileDupID", @value = Guid.Empty })

                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.InvoiceNo, new { htmlAttributes = new { @class = "form-control HeaderBox", @id = "txtInvNo", @autofocus = true } })
                                        @Html.ValidationMessageFor(model => model.InvoiceNo, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>
                            </div>
                            <div class="form-group col-md-12"></div>

                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.customerObj.ID, htmlAttributes: new { @class = "control-label " })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.customerObj.ID, Model.customerObj.CustomerList, "-- Select Customer --", new { @class = "form-control BlockEnter", style = "padding:4px 12px;", @id = "ddlCustomer", @onchange = "FillCustomerDefault(this);" })
                                        @Html.ValidationMessageFor(model => model.customerObj.ID, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>

                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.RefInvoice, htmlAttributes: new { @class = "control-label " })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.RefInvoice, new List<SelectListItem>(), "-- Select Invoice --", new { @class = "form-control BlockEnter", style = "padding:4px 12px;", @id = "ddlRefInvoice" })
                                        @Html.ValidationMessageFor(model => model.RefInvoice, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>

                            <div class="form-group col-md-12"></div>

                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.InvoiceDateFormatted, htmlAttributes: new { @class = "control-label" })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.InvoiceDateFormatted, new { htmlAttributes = new { @class = "form-control HeaderBox datepicker", @id = "txtInvDate" } })
                                        @Html.ValidationMessageFor(model => model.InvoiceDateFormatted, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>

                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.paymentTermsObj.Code, htmlAttributes: new { @class = "control-label " })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.paymentTermsObj.Code, Model.paymentTermsObj.PaymentTermsList, "-- Select Payment Term --", new { @class = "form-control BlockEnter", style = "padding:4px 12px;", @id = "ddlPaymentTerm", @onchange = "GetDueDate(this);" })
                                        @Html.ValidationMessageFor(model => model.paymentTermsObj.Code, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>

                            <div class="form-group col-md-12"></div>

                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.PaymentDueDateFormatted, htmlAttributes: new { @class = "control-label" })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.PaymentDueDateFormatted, new { htmlAttributes = new { @class = "form-control HeaderBox datepicker", @id = "txtPayDueDate" } })
                                        @Html.ValidationMessageFor(model => model.PaymentDueDateFormatted, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>

                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.companiesObj.Code, htmlAttributes: new { @class = "control-label " })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.companiesObj.Code, Model.companiesObj.CompanyList, "-- Select Company --", new { @class = "form-control BlockEnter", value = -1, style = "padding:4px 12px;", @id = "ddlCompany" })
                                        @Html.ValidationMessageFor(model => model.companiesObj.Code, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>

                            <div class="form-group col-md-12"></div>
                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.BillingAddress, htmlAttributes: new { @class = "control-label " })

                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.BillingAddress, new { htmlAttributes = new { @class = "form-control", @id = "txtBillingAddress" } })

                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>
                            <div class="form-group col-md-12"></div>


                        </div>
                        <div class="col-md-4" id="CommonFigure" style="padding-top:2%;border-left:1px solid #64e564;white-space:nowrap;">
                            <div class="form-group col-md-12">
                                <div class="col-md-12 text-right">
                                    <div class="rightAmtCaption">Invoiced Amount</div>
                                </div>
                                <div class="col-md-12 text-right">
                                    <div class="rightAmt" id="lblinvoicedAmt">₹ 0.00</div>
                                </div>
                            </div>
                            <div class="form-group col-md-12">
                                <div class="col-md-12 text-right">
                                    <div class="rightAmtCaption">Paid Amount</div>
                                </div>
                                <div class="col-md-12 text-right">
                                    <div class="rightAmt" id="lblpaidAmt">₹ 0.00</div>
                                </div>
                            </div>
                            <div class="form-group col-md-12">
                                <div class="col-md-12 text-right">
                                    <div class="rightAmtCaption">Balance Due</div>
                                </div>
                                <div class="col-md-12 text-right">
                                    <div class="rightAmt" id="lblbalalnceAmt">₹ 0.00</div>
                                </div>
                            </div>

                        </div>


                    </div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12 headSeperator"><i class="fa fa-th ig-aqua" aria-hidden="true"></i> Commercials</div>
                    <div class="col-md-12">
                        <div class="col-md-12">
                            <div class="form-group col-md-4">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.GrossAmount, htmlAttributes: new { @class = "control-label" })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.GrossAmount, new { htmlAttributes = new { @class = "form-control HeaderBox Amount Roundoff", onkeypress = "return isNumber(event)", @id = "txtGrossAmt" } })
                                        @Html.ValidationMessageFor(model => model.GrossAmount, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>
                            <div class="form-group col-md-4">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label" })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control HeaderBox Amount Roundoff", onkeypress = "return isNumber(event)", onblur = "CheckAmount()", @id = "txtDiscount" } })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>
                            <div class="form-group col-md-12"></div>
                            <div class="form-group col-md-4">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.NetTaxableAmount, htmlAttributes: new { @class = "control-label" })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.NetTaxableAmount, new { htmlAttributes = new { @class = "form-control HeaderBox Amount", onkeypress = "return isNumber(event)", @id = "txtNetTaxableAmt", @readonly = "true" } })
                                        @Html.ValidationMessageFor(model => model.NetTaxableAmount, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>
                            <div class="form-group col-md-4">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.TaxTypeObj.Code, htmlAttributes: new { @class = "control-label " })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.TaxTypeObj.Code, Model.TaxTypeObj.TaxTypesList, "-- Select Tax Type --", new { @class = "form-control BlockEnter Roundoff", value = 0, style = "padding:4px 12px;", @id = "ddlTaxType" })
                                        @*@Html.ValidationMessageFor(model => model.TaxTypeObj.Code, "", new { @class = "text-danger" })*@
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>
                            <div class="form-group col-md-4" @*style="margin-top:15%"*@>
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.TaxPercApplied, htmlAttributes: new { @class = "control-label" })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.TaxPercApplied, new { htmlAttributes = new { @class = "form-control HeaderBox Roundoff ApplyPer", onkeypress = "return isNumber(event)",@id = "txtTaxPercApp" } })
                                        @Html.ValidationMessageFor(model => model.TaxPercApplied, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>
                            <div class="form-group col-md-12"></div>
                            <div class="form-group col-md-4">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.TaxAmount, htmlAttributes: new { @class = "control-label" })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.TaxAmount, new { htmlAttributes = new { @class = "form-control HeaderBox Amount", onkeypress = "return isNumber(event)", @id = "txtTaxAmt", @readonly = "true" } })
                                        @Html.ValidationMessageFor(model => model.TaxAmount, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>
                            <div class="form-group col-md-4">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.TotalInvoiceAmount, htmlAttributes: new { @class = "control-label" })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.TotalInvoiceAmount, new { htmlAttributes = new { @class = "form-control HeaderBox Amount", onkeypress = "return isNumber(event)", @id = "txtTotalInvAmt", @readonly = "true" } })
                                        @Html.ValidationMessageFor(model => model.TotalInvoiceAmount, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>
                        </div>
                    </div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>


                    <div class="col-md-12" id="paymentStatus">

                        @if (Model.PBAccess == true)
                        {
                            <div class="col-md-12 headSeperator"><i class="fa fa-th ig-yellow"></i> Payment Status</div>
                            <div class="col-md-12">
                                <div class="col-md-8">
                                    <div class="form-group col-md-6">
                                        <div class="col-md-12">
                                            @Html.LabelFor(model => model.SpecialPayStatus, htmlAttributes: new { @class = "control-label " })
                                        </div>
                                        <div class="col-md-12">
                                            <div class="col-md-10">
                                                @{
                                                    List<SelectListItem> PaymentStatus = new List<SelectListItem>();
                                                    PaymentStatus.Add(new SelectListItem
                                                    { Text = "Not Paid", Value = "NP", Selected = true
                                                    });
                                                    PaymentStatus.Add(new SelectListItem
                                                    { Text = "Fully Paid", Value = "FP"
                                                    });
                                                    PaymentStatus.Add(new SelectListItem
                                                    { Text = "Partially Paid", Value = "PP"
                                                    });
                                                }
                                                @Html.DropDownListFor(model => model.SpecialPayStatus, PaymentStatus, new { @class = "form-control BlockEnter", style = "padding:4px 12px;", @id = "ddlSpecialPayStatus" })
                                            </div>
                                            <div class="col-md-1"></div>
                                            <div class="col-md-1"></div>
                                        </div>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <div class="col-md-12">
                                            &nbsp;
                                        </div>
                                        <div class="col-md-12">
                                            <div class="col-md-10">
                                                <a herf="#" class="actionLink" style="color:blue; cursor:pointer" onclick="SpecialPayments();"><i class="glyphicon glyphicon-share-alt"></i><u>Payment Details</u></a>
                                            </div>
                                            <div class="col-md-1"></div>
                                            <div class="col-md-1"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                                                    }

                    </div>
                        <div class="col-md-12 headSeperator"><i class="fa fa-th ig-green" aria-hidden="true"></i> Other Details</div>

                        <div class="col-md-12  ">
                            <div class="col-md-10">
                                <div class="form-group col-md-12">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-md-12">
                                        <div class="col-md-12">
                                            @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control HeaderBox multiline4", @id = "txtNotes", @rows = 4 } })
                                            @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-1"></div>
                                        <div class="col-md-1"></div>
                                    </div>

                                </div>
                            </div>
                            <div class="col-md-1"></div>
                            <div class="col-md-1"></div>
                        </div>
                        <div class="col-md-12  ">&nbsp;</div>
                        <div class="col-md-12  ">&nbsp;</div>
                        <div>
                            @Html.Partial("Fileupload")
                        </div>

                        <div class="col-md-12  ">&nbsp;</div>
                        <div class="col-md-12  ">&nbsp;</div>
                        <div class="col-md-12  ">&nbsp;</div>
                        <div class="col-md-12  ">&nbsp;</div>
                        <div class="col-md-12  ">&nbsp;</div>
                        <div class="col-md-12  ">&nbsp;</div>
                        <div class="form-group" hidden="hidden">
                            <div class="col-md-offset-2 col-md-10">
                                <input id="btnSave" type="submit" value="Create" class="btn btn-default" />
                            </div>
                        </div>
                        }
                    </div>
                    </div>

    </div>
    <div id="ExpensesDelete" hidden="hidden">
        @using (Ajax.BeginForm("DeleteInvoices", "CustomerInvoices", new AjaxOptions { HttpMethod = "POST", OnSuccess = "DeleteSuccess", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form" }))
            {
            @Html.AntiForgeryToken()
            <div class="form-actions no-color">
                @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-4", Value = "0", id = "deleteId" })
                <input id="btnFormDelete" type="submit" value="Delete" class="btn btn-default" />
            </div>
        }
    </div>
    <div class="preloader" id="prelaoder">
       <div class="col-md-12">
        <div class="col-md-12">Loading </div>
           <div class="col-md-12" style="margin-left:5%;margin-top:-3%;"><img src="~/Content/images/loading.gif" class="preloaderImg" /></div>
        </div>  
        
    </div>
</section>

<!-- Modal -->
<div class="modal fade bs-example-modal-lg" id="AdvAdjustmentModel"  tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document" style="min-width:900px !important;">
        <div class="modal-content" style="margin-top:4%;">
            <div class="modal-header"  style="background-image: url('');background-repeat: repeat;height: 36px;padding: 3px;border-bottom:2px solid rgb(149, 76, 132)!important;">
                <div class="container-fluid" style="padding-right: 0px;">
                    <div class="col-md-9">
                        <h3 class="modal-title SCHeader" id="modelContextLabel">Advance Adjustment</h3>
                    </div>
                    <div class="col-md-3" style="padding-right: 4px;">
                        <a class="close" data-dismiss="modal" aria-label="Close"><i style="font-size: 33px;" class="fa fa-times-circle" aria-hidden="true"></i></a>
                    </div>

                </div>
            </div> 
            <div class="col-md-12" style="height: 20px;padding:3px;">
                <div class="container-fluid" style="padding-right: 0px;">
                    <div class="col-md-12">
                        <div class="col-md-6"></div>
                        <div class="col-md-6" style="text-align:right;font-weight:500;color:#0da20d">
                            <span> Invoice Saved Successfully.</span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <div class="col-md-12  ">
                            <div class="col-md-6"></div>
                            <div class="col-md-6">
                                    <div class="col-md-8" style="text-align: right">
                                        @Html.LabelFor(model => model.customerObj.AdvanceAmount, htmlAttributes: new { @class = "control-label" })
                                    </div> 
                                    <div class="col-md-4">
                                        @Html.Label("0", htmlAttributes: new { @class = "control-label ", @id = "AdvanceAmount" })
                                    </div> 
                            </div>
                    </div>
                    <div class="container-fluid" >
                            <table id="tblOutStandingDetails" class="table table-striped table-bordered table-hover" cellspacing="0" >
                                <thead>
                                    <tr class="text-center">
                                        <th>ID</th>
                                        <th></th>
                                        <th>Description</th>
                                        <th>Payment Due Date</th>
                                        <th>Invoiced (₹)</th>
                                        <th>Paid (₹)</th>
                                        <th>Balance Due (₹)</th>
                                        <th>Current Payment (₹)</th>
                                        <th>PaymentDetailID</th>
                                    </tr>
                                </thead>
                            </table>
                    </div>
                    <div class="col-md-12  ">
                        <div class="col-md-6"></div>
                        <div class="col-md-6">
                            <div class="col-md-8" style="text-align: right">
                                @Html.Label("Credit Adjusted:", htmlAttributes: new { @class = "control-label " })
                            </div>
                            <div class="col-md-4" style="text-align: right">
                                @Html.Label("0", htmlAttributes: new { @class = "control-label ", @id = "lblPaymentApplied" })
                            </div> 
                        </div>
                    </div> 
                    <div class="col-md-12  ">
                        <div class="col-md-6"></div>
                        <div class="col-md-6"> 
                            <div class="col-md-8" style="text-align: right">
                                @Html.Label("Credit Remaining:", htmlAttributes: new { @class = "control-label " })
                            </div>
                            <div class="col-md-4"style="text-align: right">
                                @Html.Label("0", htmlAttributes: new { @class = "control-label ", @id = "lblCredit" })
                            </div>
                        </div>
                    </div> 
                </div>
            </div>
            <div class="modal-footer" style="height: 50px;padding: 7px;">
                <a class="btn btn-primary" onclick="SaveAdvanceAdujust()"><i class="glyphicon glyphicon-floppy-disk"></i> Save</a>
            </div>
        </div>
    </div>
</div>


<!-- Modal -->
<div class="modal fade bs-example-modal-lg" id="SpecialPaymentModel" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document"  style="min-width:900px !important;">
        <div class="modal-content"  style="margin-top:4%;">
            <div class="modal-header" style="background-image: url('');background-repeat: repeat;height: 36px;padding: 3px;border-bottom:2px solid rgb(149, 76, 132)!important;">
                <div class="container-fluid" style="padding-right: 0px;">
                    <div class="col-md-9">
                        <h3 class="modal-title SCHeader" id="modelContextLabel">Receive Special Payments</h3>
                    </div>
                    <div class="col-md-3" style="padding-right: 4px;">
                        <a class="close" data-dismiss="modal" aria-label="Close"><i style="font-size: 33px;" class="fa fa-times-circle" aria-hidden="true"></i></a>
                    </div>
                </div>
            </div> 
            <div class="modal-body">
                <div class="container-fluid"> 
                    <div class="form-group col-md-12"></div>
                        @using (Ajax.BeginForm("SpecialPayments", "CustomerInvoices", new AjaxOptions { HttpMethod = "POST", OnSuccess = "SuccessSpecialPayments", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="col-md-12">
                                <div class="col-md-6"></div>
                                <div class="col-md-6">
                                    <div class="col-md-12">
                                        <div class="col-md-5 text-right">Invoice Amount : </div>
                                        <div class="col-md-6" id="SplInvAmount"></div>
                                    </div>
                                    <div class="col-md-12">
                                        <div class="col-md-5 text-right">Received Amount : </div>
                                        <div class="col-md-6" id="SplAmountReceived"></div>
                                    </div>
                                    <div class="col-md-12">
                                        <div class="col-md-5 text-right">Balance Due : </div>
                                        <div class="col-md-6" id="SplBalDue"></div>
                                    </div>
                                </div> 
                            </div> 

                                @Html.HiddenFor(model => model.SpecialPayObj.ID, htmlAttributes: new { @class = "control-label col-md-4", Value = Guid.Empty, id = "PaymentID" })
                                @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "", id = "InvoiceId" })
                                @Html.HiddenFor(model => model.BalanceDue, htmlAttributes: new { @class = "", id = "hdfBalanceDue" })
                           
                                <div class="form-group col-md-4">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.SpecialPayObj.SpecialPaymentDate, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-md-12">
                                        <div class="col-md-11">
                                            @Html.EditorFor(model => model.SpecialPayObj.SpecialPaymentDate, new { htmlAttributes = new { @class = "form-control HeaderBox datepicker", @id = "txtSplPaymentDate" } })
                                            @Html.ValidationMessageFor(model => model.SpecialPayObj.SpecialPaymentDate, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-1"></div>
                                    </div>
                                </div>
                                <div class="form-group col-md-4">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.SpecialPayObj.SpecialPaidAmount, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-md-12">
                                        <div class="col-md-11">
                                            @Html.EditorFor(model => model.SpecialPayObj.SpecialPaidAmount, new { htmlAttributes = new { @class = "form-control", @id = "txtSpecialPaidAmount", onblur = "PaidAmountonblur(this);" } })
                                            @Html.ValidationMessageFor(model => model.SpecialPayObj.SpecialPaidAmount, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-1"></div>
                                    </div>
                                </div>
                                <div class="form-group col-md-4">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.SpecialPayObj.PaymentMode, htmlAttributes: new { @class = "control-label " })
                                    </div>
                                    <div class="col-md-12">
                                        <div class="col-md-11">
                                            @Html.DropDownListFor(model => model.SpecialPayObj.PaymentMode, Model.SpecialPayObj.PaymentModesObj.PaymentModesList, "-- Select --", new { @class = "form-control BlockEnter", value = -1, style = "padding:4px 12px;", @id = "PaymentMode", onchange = "PaymentModeChanged();" })
                                            @Html.ValidationMessageFor(model => model.SpecialPayObj.PaymentMode, "", new { @class = "text-danger" })
                                        </div> 
                                        <div class="col-md-1"></div>
                                    </div>
                                </div>
                             
                                <div class="form-group col-md-12"></div>

                                <div class="form-group col-md-4">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.SpecialPayObj.ChequeDate, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-md-12">
                                        <div class="col-md-11">
                                            @Html.EditorFor(model => model.SpecialPayObj.ChequeDate, new { htmlAttributes = new { @class = "form-control HeaderBox datepicker", @id = "ChequeDate", @autofocus = true } })
                                            @Html.ValidationMessageFor(model => model.SpecialPayObj.ChequeDate, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-1"></div>
                                    </div>
                                </div>

                                <div class="form-group col-md-4">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.SpecialPayObj.PaymentRef, htmlAttributes: new { @class = "control-label" })


                                    </div>
                                    <div class="col-md-12">
                                        <div class="col-md-11">
                                            @Html.EditorFor(model => model.SpecialPayObj.PaymentRef, new { htmlAttributes = new { @class = "form-control HeaderBox ", @id = "PaymentRef" } })
                                            @Html.ValidationMessageFor(model => model.SpecialPayObj.PaymentRef, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-1"></div>
                                    </div>

                                </div>
                                <div class="form-group col-md-4">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.SpecialPayObj.RefBank, htmlAttributes: new { @class = "control-label" })


                                    </div>
                                    <div class="col-md-12">
                                        <div class="col-md-11">
                                            @Html.EditorFor(model => model.SpecialPayObj.RefBank, new { htmlAttributes = new { @class = "form-control HeaderBox ", @id = "RefBank" } })
                                            @Html.ValidationMessageFor(model => model.SpecialPayObj.RefBank, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-1"></div>
                                    </div>

                                </div>
                                <div class="form-group col-md-12"></div> 
                                <div class="form-group col-md-8">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.SpecialPayObj.Remarks, htmlAttributes: new { @class = "control-label " })
                                    </div>
                                    <div class="col-md-12">
                                        <div class="col-md-11">
                                            @Html.EditorFor(model => model.SpecialPayObj.Remarks, new { htmlAttributes = new { @class = "form-control", @id = "txtRemarks", @rows = 3 } })
                                        </div>
                                        <div class="col-md-1"></div>
                                        <div class="col-md-1"></div>
                                    </div>
                                </div>
                              
                                <div class="form-group col-md-12"></div>
                                <div class="form-group col-md-12" hidden="hidden">
                                    <input id="btnSaveSpecialPayments" type="submit" value="Create" class="btn btn-default" />
                                </div>
                                }

                                <div class="container-fluid">
                                    <table id="tblSpecialPayments" class="table table-striped table-bordered table-hover" cellspacing="0" width="100%">
                                        <thead>
                                            <tr class="text-center">
                                                <th>ID</th>
                                                <th>Invoice No</th>
                                                <th>Payment Date</th>
                                                <th>Payment Mode</th>
                                                <th>Cheque Date</th>
                                                <th>Reference No:</th>
                                                <th>Reference Bank</th>
                                                <th>Remarks</th>
                                                <th>Paid Amount(₹)</th>
                                                <th>...</th>
                                                <th>...</th>
                                            </tr>
                                        </thead>
                                    </table>
                                </div>
                            </div>
            </div>
            <div class="modal-footer" style="height: 50px;padding: 7px;">
                <a class="btn btn-primary"  id="newBtn" disabled="true"><i class="glyphicon glyphicon-plus" ></i> New </a>  @*onclick="NewSpecialPayments()"*@
                <a class="btn btn-primary"  id="saveBtn"><i class="glyphicon glyphicon-floppy-disk"></i> Save</a>  @*onclick="SaveSpecialPayments()"*@
            </div>
        </div>
    </div>
</div>




    
@section Scripts {
@Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatable")
@Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jqueryunobtrusiveajaxvalidate")
@Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jsZip")
@Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatableButtons")
@Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/CustomerInvoices")
@Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatableSelect")
@Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/select2")
}