@model UserInterface.Models.EmployeeViewModel
@using UserInterface.App_Start
@{
    ViewBag.Title = "Employee";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}

@section styles {
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatable")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatableButtons")
    }
<div style="width:100%;">
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-users"></i> Settings</a></li>
        <li class="active">@ViewBag.Title</li>
    </ol>
</div>

<section class="content" id="main">
    <div class="row">
        <div class="" id="btnPatchAttributeSettab" style="min-height:25px">

            @{
                var data = new { ActionType = "List" };
                @Html.Action("ChangeButtonStyle", "Employee", data);
            }
        </div>
    </div>
    <div class="row summaryboxes">

        <div class="clearfix visible-sm-block"></div>

    </div>
    <div class="row">
        &nbsp;
    </div>
    <div class="row tableContainer">
        <div class="col-md-12">
            <table id="EmployeeTable" class="table table-striped table-bordered table-hover customgrd" cellspacing="0" width="100%">
                <thead>
                    <tr class="text-center TableHead">
                        <th>ID</th>
                       <th>Code</th>
                        <th>Name</th>                       
                        @*<th>Employee Type</th>*@
                        <th>Company</th>
                        <th>Department</th>
                        <th>Employee Category</th>
                        <th>Is Active</th>
                        <th>...</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>

</section>

<section class="content">


    <div id="myNav" class="overlay">



        <div class="overlay-content">

            <div class="row" id="OverlayHeader">
                <div class="col-md-6" style="text-align:left">
                    <span id="lblInvoiceNo" class="SCHeader">Employee</span>
                </div>
                <div class="col-md-6" id="btnPatchAdd" style="min-height:25px; padding-right:25px;">

                    @{
                        var data1 = new { ActionType = "Add" };
                        @Html.Action("ChangeButtonStyle", "Employee", data1);
                    }
                </div>
            </div>

            <div class="EntryForms">
             @using (Ajax.BeginForm("InsertUpdateEmployee", "Employee", new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "SaveSuccess", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form", @id = "EmployeeForm" }))
             {
                @Html.AntiForgeryToken()               
                @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "", Value = "0" })
                @Html.HiddenFor(model => model.EmployeeType, htmlAttributes: new { @class = "", Value = "EMP" })

                <div class="col-md-12 headSeperator"><i class="fa fa-th ig-yellow" aria-hidden="true"></i> Basic Details</div>
                <div class="col-md-12">
                    <div class="col-md-4">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group col-md-12">
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label " })
                                </div>
                            <div class="col-md-12">
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1 mandatory"></div>
                                <div class="col-md-1"></div>
                            </div>
                            </div>

                        <div class="form-group col-md-12">
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-12">
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1 mandatory"></div>
                                <div class="col-md-1"></div>
                            </div>
                        </div>

                        <div class="form-group col-md-12">
                            <div class="col-md-12">
                               @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-12">
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1"></div>
                                <div class="col-md-1"></div>
                            </div>
                        </div>                                         
                                                
                       
                        <div class="form-group col-md-12">
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.companyID, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-12">
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.companyID, Model.CompaniesList, "-- Select a Company --", new { @class = "form-control BlockEnter", value = -1, style = "padding:4px 12px;", @id = "Company" })
                                    @Html.ValidationMessageFor(model => model.companyID, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1 mandatory"></div>
                                <div class="col-md-1"></div>
                            </div>
                        </div>

                        <div class="form-group col-md-12">
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-12">
                                <div class="col-md-10">
                                    @Html.CheckBoxFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control HeaderBox BlockEnter" } })
                                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1"></div>
                                <div class="col-md-1"></div>
                            </div>
                        </div>

                            @*<div class="form-group col-md-12" >
                <div class="col-md-12">
                    @Html.LabelFor(model => model.EmployeeType, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-12" >
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.EmployeeType, Model.EmployeeTypeList, "-- Select Employee Type --", new { @class = "form-control BlockEnter", value = -1, style = "padding:4px 12px;", @id = "EmployeeType" })

                        @Html.ValidationMessageFor(model => model.EmployeeType, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-1"></div>
                    <div class="col-md-1"></div>
                </div>
            </div>*@

                            <div class="col-md-12  ">&nbsp;</div>
                            <div class="col-md-12  ">&nbsp;</div>




                        </div>
                    <div class="col-md-4">
                        <div class="form-group col-md-12">
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-12">
                                <div class="col-md-10">
                                   @Html.DropDownListFor(model => model.Department, Model.DepartmentList, "-- Select a Department --", new { @class = "form-control BlockEnter", value = -1, style = "padding:4px 12px;" })
                                @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1"></div>
                                <div class="col-md-1"></div>
                            </div>
                        </div>

                        <div class="form-group col-md-12">
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.EmployeeCategory, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-12">
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.EmployeeCategory, Model.CategoryList, "-- Select a Employee Category --", new { @class = "form-control BlockEnter", value = -1, style = "padding:4px 12px;" })
                                    @Html.ValidationMessageFor(model => model.EmployeeCategory, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1"></div>
                                <div class="col-md-1"></div>
                            </div>
                        </div>

                        <div class="form-group col-md-12">
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-12">
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.Address, 6, 50,  htmlAttributes:new { @class = "form-control"  })

                                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1"></div>
                                <div class="col-md-1"></div>
                            </div>
                        </div>

                    
                        </div>
                  
                    </div>
                    <div class="col-md-12">
                        <div class="col-md-12 headSeperator"><i class="fa fa-th ig-green" aria-hidden="true"></i> Other Details</div>
                        <div class="col-md-4">
                            <div class="form-group col-md-12" hidden="hidden">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.ImageURL, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.ImageURL, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ImageURL, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>
                            </div>

                            <div class="form-group col-md-12">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.GeneralNotes, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.TextAreaFor(model => model.GeneralNotes, 5, 145, new { htmlAttributes = new { @class = "form-control BlockEnter multiline4" } })
                                        @Html.ValidationMessageFor(model => model.GeneralNotes, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>
                            </div>
                        </div>
                      
                    </div>
                        <div class="col-md-12  ">&nbsp;</div>
                        <div class="col-md-12  ">&nbsp;</div>


                        <div class="col-md-12  ">&nbsp;</div>
                        <div class="col-md-12  ">&nbsp;</div>
                        <div class="col-md-12  ">&nbsp;</div>
                        <div class="col-md-12  ">&nbsp;</div>
                        <div class="col-md-12  ">&nbsp;</div>
                        <div class="col-md-12  ">&nbsp;</div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10" hidden="hidden">
                                <input id="btnInsertUpdateEmployee" type="submit" value="Create" class="btn btn-default" />
                            </div>
                        </div>
                        }
                    </div>
        </div>

    </div>
    <div class="preloader" id="prelaoder">
        <div class="col-md-12">
            <div class="col-md-12">Loading </div>
            <div class="col-md-12" style="margin-left:5%;margin-top:-3%;"><img src="~/Content/images/loading.gif" class="preloaderImg" /></div>
        </div>

    </div>
</section>

@section Scripts {
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatable")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jsZip")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatableButtons")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jqueryunobtrusiveajaxvalidate")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/Employee")
}


