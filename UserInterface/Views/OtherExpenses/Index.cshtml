@model UserInterface.Models.OtherExpenseViewModel
@using UserInterface.App_Start
@{
    ViewBag.Title = "Other Expenses";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}

@section styles {
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatable")
     @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/css/select2")
<style>

    </style>
}
<div style="width:100%;">
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-file-text-o"></i> Sales</a></li>
        <li class="active">@ViewBag.Title</li>
    </ol>
</div>


<div class="row">
    <div class="" id="btnPatchAttributeSettab" style="min-height:25px">

        @{
            var data = new { ActionType = "Add" };
            @Html.Action("ChangeButtonStyle", "OtherExpenses", data);
        }
    </div>
</div>
<div class="preloader" id="prelaoder">
    <div class="col-md-12">
        <div class="col-md-12">Loading </div>
        <div class="col-md-12" style="margin-left:5%;margin-top:-3%;"><img src="~/Content/images/loading.gif" class="preloaderImg" /></div>
    </div>

</div>
<div class="form-horizontal">

    @if (Model.ApprovalFilter == true)
    {
        @Html.Hidden("hdnDeletePermitted", true, htmlAttributes: new { @class = "" });
    }
    else
    {
        @Html.Hidden("hdnDeletePermitted", false, htmlAttributes: new { @class = "" });
    }

    <div class="col-md-12">
        <div class="col-md-3">
            <div class="form-group col-md-12">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.ExpenseDateFormatted, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-12">
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ExpenseDateFormatted, new { htmlAttributes = new { @class = "form-control HeaderBox BlockEnter datepicker", @id = "ExpDate", @onchange = "ExpenseDateOnchange()" } })
                        @Html.ValidationMessageFor(model => model.ExpenseDateFormatted, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-1"></div>
                    <div class="col-md-1"></div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="col-md-12">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.ApprovalStatus, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-10">
                    @{
                        List<SelectListItem> ApprovalList = new List<SelectListItem>();
                        ApprovalList.Add(new SelectListItem
                        { Text = "Pending for Approval", Value = "1" });
                        ApprovalList.Add(new SelectListItem
                        { Text = "Not Applicable", Value = "2" });
                        ApprovalList.Add(new SelectListItem
                        { Text = "Approved", Value = "3" });
                    }
                    @Html.DropDownListFor(model => model.ApprovalStatus, ApprovalList, "ALL", new { @class = "form-control BlockEnter", style = "padding:4px 12px;", @id = "ApprovalStatusFilter", @onchange = "ApprovalOnchange(this)", value = -1 })
                    @Html.ValidationMessageFor(model => model.ApprovalStatus, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-1"></div>
                <div class="col-md-1"></div>

            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group col-md-12">
                @if (Model.ShowDaysFilter == true)
                {
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.DefaultDate, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-12">


                        <div class="col-md-10">
                            @{
                                List<SelectListItem> listDefaultDate = new List<SelectListItem>();
                                listDefaultDate.Add(new SelectListItem
                                { Text = "Last 30 Days", Value = "30" });
                                listDefaultDate.Add(new SelectListItem
                                { Text = "Last 60 Days", Value = "60" });
                                listDefaultDate.Add(new SelectListItem
                                { Text = "All", Value = "0" });
                            }
                            @Html.DropDownListFor(model => model.DefaultDate, listDefaultDate, new { @class = "form-control BlockEnter", style = "padding:4px 12px;", @id = "DefaultDate", @onchange = "ExpenseDefaultDateOnchange(this)" })
                            @Html.ValidationMessageFor(model => model.DefaultDate, "", new { @class = "text-danger" })

                        </div>


                        <div class="col-md-1"></div>
                        <div class="col-md-1"></div>
                    </div>

                                }

            </div>
        </div>
        <div class="col-md-3" style="padding-top:2%;border-left:1px solid #64e564;white-space:nowrap;">

            <div class="col-md-12">
                <div class="col-md-5 text-right">Opening As On  </div>
                <div class="col-md-1 ">:</div>
                <div class="col-md-5" id="OpeningDate"></div>
            </div>
            <div class="col-md-12">
                <div class="col-md-5 text-right">Cash  </div>
                <div class="col-md-1 ">:</div>
                <div class="col-md-5" id="OpeningCash"></div>
            </div>
            <div class="col-md-12">
                <div class="col-md-5 text-right"><a id="tabBankWiseBalanceList"onclick="BankwiseBalance()" style="cursor:pointer;">Bank</a>  </div>
                <div class="col-md-1 ">:</div>
                <div class="col-md-5"> <a id="OpeningBank" onclick="BankwiseBalance()" style="cursor:pointer;"></a></div>
            </div>
            <div class="col-md-12">
                <div class="col-md-5 text-right">Bank(Not Cleared)  </div>
                <div class="col-md-1 ">:</div>
                <div class="col-md-5" id="OpeningNCBank"></div>
            </div>
            <div class="col-md-12">
                <div class="col-md-5 text-right">Cheque(Undeposited)  </div>
                <div class="col-md-1 ">:</div>
                <div class="col-md-5" id="UndepositedCheque"></div>
            </div>

        </div>

    </div>


     <div class="row summaryboxes">
         <div class="clearfix visible-sm-block">
         </div>
     </div>

        <div class="row">
            &nbsp;
        </div>


        <div class="form-group col-md-12">
            <div class="col-md-4">
                <div class="row tableContainer">
                    <div class="col-md-12">
                        <div class="col-md-4 text-left">
                            <div class="rightAmtCaption" style="width:100% ;padding-top:13%">Net Expense</div>
                        </div>
                        <div class="col-md-8 text-left">
                            <div class="rightAmt" id="TotalAmt"></div>
                        </div>
                    </div>
                </div>
            </div>

            <table id="expenseDetailTable" class="table table-striped table-bordered table-hover customgrd" cellspacing="0" width="100%">
                <thead>
                    <tr class="text-center TableHead">
                        <th>Ref. No</th>
                        <th>Account</th>
                        <th>Payment mode</th>
                        <th>Description</th>
                        <th>Amount</th>
                        <th>Expense Date</th>
                        <th>Origin Company</th>
                        <th>Reference No</th>
                        <th>...</th>
                        <th>...</th>
                        <th>ID</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>




@*Model*@
<div class="modal fade" id="AddOtherexpenseModel" role="dialog" data-backdrop="static" data-keyboard="false" aria-labelledby="myModalLabel" aria-hidden="true" @*style="overflow-y:hidden !important;"*@>
    <div class="modal-dialog" role="document" style="min-width:900px !important;">
        <div class="modal-content">
            <div class="modal-header" style="background-image: url('content/images/73a6f1c8.png');background-repeat: repeat;height: 36px;padding: 3px;border-bottom:2px solid rgb(149, 76, 132)!important;">
                <div class="container-fluid" style="padding-right: 0px;">
                    <div class="col-md-4">
                        <h3 class="modal-title SCHeader" id="modelContextLabel"></h3>

                        <div class="col-md-12">
                            <span style="font-weight: 600;font-size: 20px;" id="AddOrEditSpan">Add New</span>
                                                       
                        </div>
                    </div>
                    <div class="col-md-8" style="padding-right: 4px;">
                        <span class="rightAmtCaption" style="margin-right:2% !important;padding-left:140px;">Amount :</span>
                        <span class="rightAmt" style="font-size:20px;margin-right:0px !important;" id="creditdAmt">₹ 0.00</span>

                        <a class="close" data-dismiss="modal" aria-label="Close"><i style="font-size: 33px;" class="fa fa-times-circle" aria-hidden="true"></i></a>
                    </div>

                </div>
            </div>

          
            <div class="modal-body">
                <div class="container-fluid">
                    <div class="col-md-12">
                        @using (Ajax.BeginForm("InsertUpdateOtherExpense", "OtherExpenses", new AjaxOptions { HttpMethod = "POST",OnBegin="Validation", OnSuccess = "SaveSuccess", OnFailure = "SaveFailure", AllowCache = false, LoadingElementId = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form", id = "OtherExpenseModal", autocomplete = "off" }))

                        {
                            @Html.AntiForgeryToken()
                            @Html.Hidden("hdnReducibleAmt", "", htmlAttributes: new { @class = "" });
                            @Html.Hidden("BindValue", "", htmlAttributes: new { @class = "", Value = ViewBag.value });
                            @Html.Hidden("hdnAmountReversal", "", htmlAttributes: new { @class = ""});

                            <div class="form-group col-md-12">
                                <div class="col-md-6">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.ExpenseDate, htmlAttributes: new { @class = "control-label" })
                                        @Html.HiddenFor(model => model.ID, htmlAttributes: new { @Value = Guid.Empty })
                                    </div>                                   
                                    <div class="col-md-11">
                                            @Html.EditorFor(model => model.ExpenseDate, new { htmlAttributes = new { @class = "form-control HeaderBox BlockEnter datepicker", @id = "expenseDateModal" } })
                                            @Html.ValidationMessageFor(model => model.ExpenseDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.RefNo, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-md-11">
                                        @{
                                            @Html.EditorFor(model => model.RefNo, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                        }

                                    </div>
                                </div>
                            </div>
                            <div class="form-group col-md-12">
                                <div class="col-md-6">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.AccountCode, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-md-11">
                                        @Html.DropDownListFor(model => model.AccountCode, Model.AccountTypes, "-- Select Account --", new { @class = "form-control BlockEnter", value = -1, style = "width:100%;", @id = "AccountCode", @onchange = "AccountCodeOnchange(this)" })
                                        @Html.ValidationMessageFor(model => model.AccountCode, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                    <div class="col-md-6" id="ApprovalDiv">
                                        <div class="col-md-12">
                                            @Html.HiddenFor(model => model.ApprovalDate, htmlAttributes: new { })
                                            @Html.LabelFor(model => model.ApprovalStatus, htmlAttributes: new { @class = "control-label" })
                                        </div>
                                        <div class="col-md-11">
                                            @if (Model.ApprovalFilter == true)
                                            {
                                                @Html.Hidden("hdnIsPermitted", true, htmlAttributes: new { @class = "" });
                                                @Html.DropDownListFor(model => model.ApprovalStatus, ApprovalList, "-- Select Status --", new { @class = "form-control BlockEnter", style = "padding:4px 12px;", @id = "ApprovalStatus", value = -1 })
                                            }
                                            else
                                            {
                                                @Html.Hidden("hdnIsPermitted", false, htmlAttributes: new { @class = "" });
                                                @Html.DropDownListFor(model => model.ApprovalStatus, ApprovalList, "-- Select Status --", new { @class = "form-control BlockEnter", style = "padding:4px 12px;", @id = "ApprovalStatus", value = -1 , @disabled = "disabled" })
                                            }
                                        </div>
                                    </div>

                                
                            </div> 
                            <div class="form-group col-md-12">
                                <div class="col-md-6">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.EmpTypeCode, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-md-11">
                                            @Html.DropDownListFor(model => model.EmpTypeCode, Model.EmployeeTypeList, "-- Select Employee Type --", new { @class = "form-control BlockEnter", value = -1, style = "padding:4px 12px;", @onchange = "EmployeeTypeOnchange(this)" })
                                            @Html.ValidationMessageFor(model => model.EmpTypeCode, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                 <div class="col-md-12">
                                     @Html.LabelFor(model => model.EmpID, htmlAttributes: new { @class = "control-label" })
                                 </div>
                                 <div class="col-md-11">
                                         @Html.DropDownListFor(model => model.EmpID, new List<SelectListItem>(), "-- Select Employee --", new { @class = "form-control BlockEnter", value = -1, @style = "width:100%",@onchange= "SelectEmployeeCompanyOnchange(this)", @id= "EmpID" })
                                         @Html.ValidationMessageFor(model => model.EmpID, "", new { @class = "text-danger" })
                                 </div>
                                    <span id="btnAddEmployee" title="Add Employee/Other"><img src="~/Content/images/add.png" style="width:20px;cursor:pointer;" onclick="AddEmployee();" /></span>

                             </div>
                                <div class="col-md-6"></div>
                                <div class="col-md-6">
                                    <div id="EmployeeDiv" hidden="hidden" class="addEmp">

                                        <h5 style="text-align:center;font-size:14px;">Add New Employee/Other</h5>
                                        <div class="row col-md-10" style="margin-left:12px"><span>Sub Type :</span><span id="sbtyp">Not Selected</span></div>
                                        <div class="row col-md-10" style="margin-left:12px;margin-bottom:5px;"><span>Company :</span><span id="cmpny">Not Selected</span></div>

                                        @Html.EditorFor(model => model.EmpName, new { htmlAttributes = new { @class = "form-control", placeholder = "Employee Name", style = "width:80% !important;font-size:12px;padding-left:5px;margin-left:20px;height:28px;border-radius:4px;border:1px solid #ccc;" } })
                                        @Html.ValidationMessageFor(model => model.EmpName, "", new { @class = "text-danger", style = "padding-left:5px;margin-left:20px;" })

                                        <br />
                                        <a class="btn btn-primary" style="height:30px;margin-left:30%;" onclick="SaveEmployee();">Save</a>
                                        <a class="btn btn-default" style="height:30px;" onclick="CancelEmployee();">Cancel</a>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group col-md-12">
                                <div class="col-md-6">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.IsReverse, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-md-11">
                                        @{
                                            List<SelectListItem> listIsReverse = new List<SelectListItem>();
                                            listIsReverse.Add(new SelectListItem
                                            { Text = "Regular", Value = "false" });
                                            listIsReverse.Add(new SelectListItem
                                            { Text = "Reversal", Value = "true" });
                                        }
                                        @Html.DropDownListFor(model => model.IsReverse, listIsReverse, new { @class = "form-control BlockEnter", style = "padding:4px 12px;", @id = "IsReverse", @onchange = "IsReverseOnchange()" })
                                    </div>
                                </div>

                                <div id="ReversalRefDiv" class="col-md-6" style="display:none">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.ReversalRef, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-md-11">
                                        @{
                                            @Html.EditorFor(model => model.ReversalRef, new { htmlAttributes = new { @class = "form-control",@onkeyup="ClearReversalRef()" } })
                                            @Html.ValidationMessageFor(model => model.ReversalRef, "", new { @class = "text-danger" })
                                        }

                                    </div>
                                    <span id="btnAddRef" title="Search Reference"><img src="~/Content/images/searchdefault.png" style="width:20px;cursor:pointer;" onclick="SearchReference();"/></span>
                                </div>
                                <div class="col-md-6"></div>
                                <div class="col-md-12">
                                    <div id="RefSearchDiv" hidden="hidden"  class="addEmp">
                                        <div class="col-md-11"></div>
                                        <div class="col-md-1">
                                            <a class="close" onclick="CancelSearch();" style="padding-top:5px" aria-label="Close"><i style="font-size: 22px;" class="fa fa-times-circle" aria-hidden="true"></i></a>
                                        </div>
                                        <div class="col-md-12"> 
                                            <div id="ReFSearchMsg" class="col-md-12" style="color:red" hidden="hidden">* Select AccountHead/Subtype/Empoyee/other as applicable</div>
                                        </div>
                                        <div class="col-md-12">
                                            <h5 style="text-align:left;font-size:16px;position:absolute;padding-top:20px; padding-left:20px">Select Reversal Referances</h5>
                                            <table id="RefSearchTable" class="table table-striped table-bordered table-hover customgrd" cellspacing="0" width="100%">
                                                <thead>
                                                    <tr class="text-center TableHead">
                                                        <th>Ref. No</th>
                                                        <th>Description</th>
                                                        <th>Expense Date</th>
                                                        <th>Amount</th>
                                                        <th>Reversible Amount</th>
                                                        <th>...</th>
                                                    </tr>
                                                </thead>
                                            </table>
                                        </div>                                       
                                    </div>
                                </div>
                            </div>

                            <div class="form-group col-md-12">
                                <div class="col-md-6">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.PaidFromCompanyCode, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-md-11">
                                        @Html.DropDownListFor(model => model.PaidFromCompanyCode, Model.CompanyList, "-- Select Company --", new { @class = "form-control BlockEnter", value = -1, style = "padding:4px 12px;", @id = "CompanyCode", @onchange = "companyChange(this)" })

                                        @Html.ValidationMessageFor(model => model.PaidFromCompanyCode, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                              


                            </div>

                            <div class="form-group col-md-12">

                                <div class="col-md-6">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.PaymentMode, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-md-11">
                                        @Html.DropDownListFor(model => model.PaymentMode, Model.paymentModeList, "-- Select payment mode --", new { @class = "form-control BlockEnter", value = -1, style = "padding:4px 12px;", @id = "paymentMode", @onchange = "PaymentModeOnchange(this)" })
                                        @Html.ValidationMessageFor(model => model.PaymentMode, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.ReferenceBank, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-md-11">
                                        @Html.EditorFor(model => model.ReferenceBank, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ReferenceBank, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                                    <div class="form-group col-md-12">
                                        <div class="col-md-6">
                                            <div class="col-md-12">
                                                @Html.LabelFor(model => model.BankCode, htmlAttributes: new { @class = "control-label" })
                                            </div>
                                            <div class="col-md-11">
                                                @Html.DropDownListFor(model => model.BankCode, Model.bankList, "-- Select Bank --", new { @class = "form-control BlockEnter", value = -1, style = "padding:4px 12px;", @id = "BankCode", @onchange = "BankOnchange(this)" })
                                                @Html.ValidationMessageFor(model => model.BankCode, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="col-md-12">
                                               @Html.LabelFor(model => model.ExpenseRef, htmlAttributes: new { @class = "control-label" })
                                            </div>
                                            <div class="col-md-11">
                                                @{
                                                    @Html.EditorFor(model => model.ExpenseRef, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.ExpenseRef, "", new { @class = "text-danger" })
                                                }
                                               
                                            </div>
                                        </div>
                                    </div>



                                    <div class="form-group col-md-12">
                                        <div class="col-md-6">
                                            <div class="col-md-12">
                                                @Html.LabelFor(model => model.ChequeDate, htmlAttributes: new { @class = "control-label" })
                                            </div>

                                            <div class="col-md-11">
                                                @Html.EditorFor(model => model.ChequeDate, new { htmlAttributes = new { @class = "form-control HeaderBox BlockEnter datepicker", @id = "ChequeDate" } })
                                                @Html.ValidationMessageFor(model => model.ChequeDate, "", new { @class = "text-danger" })

                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="col-md-12">
                                                @Html.LabelFor(model => model.ChequeClearDate, htmlAttributes: new { @class = "control-label" })
                                            </div>

                                            <div class="col-md-11">
                                                @Html.EditorFor(model => model.ChequeClearDate, new { htmlAttributes = new { @class = "form-control HeaderBox BlockEnter datepicker", @id = "ChequeClearDate" } })
                                            </div>
                                        </div>
                                      
                                        </div>

                                        <div class="form-group col-md-12">
                                           
                                            <div class="col-md-6">
                                                <div class="col-md-12">
                                                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                                </div>
                                                <div class="col-md-12">

                                                    @Html.TextAreaFor(model => model.Description, 3, 50, new { htmlAttributes = new { @class = "form-control HeaderBox BlockEnter", @id = "Description" } })

                                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })

                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="col-md-12">
                                                    @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div id="ReFAmountMsg" class="col-md-10" style="color:red" hidden="hidden"></div>
                                                </div>
                                                <div class="col-md-11">
                                                    @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control HeaderBox BlockEnter Amount", @id = "Amount", onkeypress = "return isNumber(event)", onchange = "CheckReversableAmount()", @onclick = "SelectAllValue(this);" } })
                                                    @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                                                </div>
                                            </div>


                                        </div>



                                        <div class="form-group" style="display:none;">
                                            <div class="col-md-offset-2 col-md-10">
                                                <input id="btnSaveOtherExpense" type="submit" value="Create" class="btn btn-default" />
                                            </div>
                                        </div>
                                        }


                                    </div>


                </div>
            </div>
            <div class="modal-footer" style="background-image: url('content/images/73a6f1c8.png');background-repeat: repeat;height: 50px;padding: 7px;">
                <span id="lblIsNotified" style="font-size:medium;float:left;color:green">* Notification Sent</span>
                @Html.HiddenFor(model => model.IsNotified, new { })
                <a id="btnNotify" class="btn btn-primary" onclick="Notify()"><i class="glyphicon glyphicon-send"></i> Notify</a>
                <a class="btn btn-primary" id="btnSave" onclick="Save()"><i class="glyphicon glyphicon-floppy-disk"></i> Save</a>
                <a class="btn btn-default" onclick="Reset()"><i class="glyphicon glyphicon-refresh"></i> Reset</a>

            </div>

        </div>
    </div>
</div>


@*Model*@
<div class="modal fade" id="BankWiseBalanceList" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" aria-labelledby="myModalLabel" aria-hidden="true" @*style="overflow-y:hidden !important;"*@>
    <div class="modal-dialog" role="document" style="min-width:900px !important;">
        <div class="modal-content">
            <div class="modal-header" style="background-image: url('content/images/73a6f1c8.png');background-repeat: repeat;height: 36px;padding: 3px;border-bottom:2px solid rgb(149, 76, 132)!important;">
                <div class="container-fluid" style="padding-right: 0px;">
                    <div class="col-md-4">
                        <h3 class="modal-title SCHeader" id="modelContextLabel"></h3>

                        <div class="col-md-12">
                            <span style="font-weight: 600;font-size: 20px;" id="AddOrEditSpan">Bank Wise Balance</span>
                        </div>
                    </div>
                        
                       
                    <div class="col-md-8" style="padding-right: 4px;"> 
                        <a class="close" data-dismiss="modal" aria-label="Close"><i style="font-size: 33px;" class="fa fa-times-circle" aria-hidden="true"></i></a>
                    </div>

                </div>
            </div>


            <div class="modal-body">
                <div class="form-group col-md-12">
                    <div class="col-md-6">
                    </div>
                    <div id="saleTotals" class="col-md-6 box-header figuresummary rounded" >
                        <div class="col-md-8 text-right" style="font-size:small">Total Sys/Cal Balance:</div>
                        <div class="col-md-4 text-right"><small><span id="TotalBlnce" style="font-size:small;font-weight:bold"></span></small></div>
                        <div class="col-md-8 text-right" style="font-size:small">Total UnCleared Amount:</div>
                        <div class="col-md-4 text-right"><small><span id="TotalUnClrAmt" style="font-size:small;font-weight:bold"></span></small></div>
                        <div class="col-md-8 text-right" style="font-size:small">Total Actual Balance:</div>
                        <div class="col-md-4 text-right"> <small><span id="ActualBlnce" style="font-size:small;font-weight:bold"></span></small></div>
                    </div>
                </div> 
                <div class="container-fluid">
                    <table id="tblbankWiseBalanceTable" class="table table-striped table-bordered table-hover" cellspacing="0" width="100%">
                        <thead>
                            <tr class="text-center">
                                <th>BankCode</th>
                                <th>BankName</th>
                                <th>System/Calculated Balance </th>
                                <th>Uncleared Amount</th>
                                <th>Actual Balance</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
            <div class="modal-footer" style="background-image: url('content/images/73a6f1c8.png');background-repeat: repeat;height: 50px;padding: 7px;">
               
            </div>

        </div>
    </div>
</div>

@*LIMIT Model*@
<div class="modal fade" id="MaximumLimitModal" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document" style="min-width:900px !important;">
        <div class="modal-content">

                    @Html.AntiForgeryToken()
                    @Html.Hidden("hdnLimitValue", "", htmlAttributes: new { @class = "" })

                    <div class="modal-header" style="background-image: url('content/images/73a6f1c8.png');background-repeat: repeat;height: 36px;padding: 3px;border-bottom:2px solid rgb(149, 76, 132)!important;">
                        <div class="container-fluid" style="padding-right: 0px;">
                            <div class="col-md-4">
                                <h3 class="modal-title SCHeader" id="modelContextLabel"></h3>

                                <div class="col-md-12">
                                    <span style="font-weight: 600;font-size: 20px;" id="AddOrEditSpan">Edit Maximum Limit</span>
                                </div>
                            </div>


                            <div class="col-md-8" style="padding-right: 4px;">
                                <a class="close" data-dismiss="modal" aria-label="Close"><i style="font-size: 33px;" class="fa fa-times-circle" aria-hidden="true"></i></a>
                            </div>

                        </div>
                    </div>


                    <div class="modal-body">

                        <div class="container-fluid">
                            <div class="col-md-12">
                                <div class="form-group col-md-6">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.SysSettingsObj, htmlAttributes: new { @class = "control-label " })
                                    </div>
                                    <div class="col-md-12">

                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.SysSettingsObj.Value, new { htmlAttributes = new { @class = "form-control", @id = "txtLimitValue", style = "text-align:right; width:250px", min = "1" } })
                                            @Html.ValidationMessageFor(model => model.SysSettingsObj, "", new { @class = "text-danger" })

                                        </div>
                                        <div class="col-md-1 mandatory"></div>
                                        <div class="col-md-1"></div>
                                    </div>

                                </div>

                                <div class="form-group col-md-12"></div>



                            </div>

                        </div>
                    </div>
                    <div class="modal-footer" style="background-image: url('content/images/73a6f1c8.png');background-repeat: repeat;height: 50px;padding: 7px;">
                        <a class="btn btn-primary" onclick="UpdateLimit()" id="btnUpdate"><i class="glyphicon glyphicon-floppy-disk"></i> Update</a>
                    </div>
                        <div class="form-group" hidden="hidden">
                            <div class="col-md-offset-2 col-md-10">
                                <input id="btnUpdateMaxLimit" type="submit" value="Create" class="btn btn-default" />
                            </div>
                        </div>

        </div>
    </div>
</div>

@*Notification Model*@
<div class="modal fade" id="NotificationMessagemodal" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" aria-labelledby="myModalLabel" aria-hidden="true" @*style="overflow-y:hidden !important;"*@>
    <div class="modal-dialog" role="document" style="min-width:900px !important;">
        <div class="modal-content">
            <div class="modal-header" style="background-image: url('content/images/73a6f1c8.png');background-repeat: repeat;height: 36px;padding: 3px;border-bottom:2px solid rgb(149, 76, 132)!important;">
                <div class="container-fluid" style="padding-right: 0px;">
                    <div class="col-md-4">
                        <h3 class="modal-title SCHeader" id="modelContextLabel"></h3>
                        <div class="col-md-12">
                            <span style="font-weight: 600;font-size: 20px;" id="AddOrEditSpan">Notification Message</span>
                        </div>
                    </div>
                    <div class="col-md-8" style="padding-right: 4px;">
                        <a class="close" data-dismiss="modal" aria-label="Close"><i style="font-size: 33px;" class="fa fa-times-circle" aria-hidden="true"></i></a>
                    </div>
                </div>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <div class="form-group col-md-6">
                        <div class="col-md-12">
                            @Html.Label("Additional Message", htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-12">
                            <div class="col-md-12">
                                @Html.TextAreaFor(model => model.Description, 4, 50, new { @class = "form-control HeaderBox ", maxlength = 250, @onkeyup = "ChangeNotificationMessage();", @id= "DescriptionNotes" })
                                @Html.Label("* Additional Message will be saved as Description", htmlAttributes: new { @class = "control-label" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        <div class="col-md-12">
                            @Html.Label("Notification Messsage", htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-12">
                            <div class="col-md-10">
                                <span id="lblNotyMessage" class=""></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="modal-footer" style="background-image: url('content/images/73a6f1c8.png');background-repeat: repeat;height: 50px;padding: 7px;">
                <a class="btn btn-primary" onclick="SendNotificationConfirm()"><i class="glyphicon"></i> Send</a>
            </div>
        </div>
    </div>
</div>

    @section Scripts {
        @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatable")
        @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jqueryunobtrusiveajaxvalidate")
        @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/select2")
        @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/OtherExpense")
      
    }
