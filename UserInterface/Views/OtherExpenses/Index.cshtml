@model UserInterface.Models.OtherExpenseViewModel
@using UserInterface.App_Start
@{
    ViewBag.Title = "Other Expenses";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}

@section styles {
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatable")
}
<div style="width:100%;">
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-truck"></i> Sales</a></li>
        <li class="active">@ViewBag.Title</li>
    </ol>
</div>


<div class="row">
    <div class="" id="btnPatchAttributeSettab" style="min-height:25px">

        @{
            var data = new { ActionType = "Add" };
            @Html.Action("ChangeButtonStyle", "OtherExpenses", data);
        }
    </div>
</div>
<div class="preloader" id="prelaoder">
    <div class="col-md-12">
        <div class="col-md-12">Loading </div>
        <div class="col-md-12" style="margin-left:5%;margin-top:-3%;"><img src="~/Content/images/loading.gif" class="preloaderImg" /></div>
    </div>

</div>
<div class="form-horizontal">

    <div class="col-md-12">
        <div class="col-md-4">
            <div class="form-group col-md-12">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.ExpenseDateFormatted, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-12">
                    <div class="col-md-10">
                      @Html.EditorFor(model => model.ExpenseDateFormatted, new { htmlAttributes = new { @class = "form-control HeaderBox BlockEnter datepicker", @id = "ExpDate", @onchange = "ExpenseDateOnchange()" } })
                    @Html.ValidationMessageFor(model => model.ExpenseDateFormatted, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-1"></div>
                    <div class="col-md-1"></div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group col-md-12">
                @if (Model.ShowDaysFilter == true)
                {
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.DefaultDate, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-12">


                        <div class="col-md-10">
                            @{
                                List<SelectListItem> listDefaultDate = new List<SelectListItem>();
                                listDefaultDate.Add(new SelectListItem
                                { Text = "Last 30 Days", Value = "30" });
                                listDefaultDate.Add(new SelectListItem
                                { Text = "Last 60 Days", Value = "60" });
                                listDefaultDate.Add(new SelectListItem
                                { Text = "All", Value = "0" });
                            }
                            @Html.DropDownListFor(model => model.DefaultDate, listDefaultDate, new { @class = "form-control BlockEnter", style = "padding:4px 12px;", @id = "DefaultDate", @onchange = "ExpenseDefaultDateOnchange()" })
                            @Html.ValidationMessageFor(model => model.DefaultDate, "", new { @class = "text-danger" })

                        </div>


                        <div class="col-md-1"></div>
                        <div class="col-md-1"></div>
                    </div>

                                }
              
            </div>
        </div>
        <div class="col-md-4" style="padding-top:2%;border-left:1px solid #64e564;white-space:nowrap;">

            <div class="col-md-12">
                <div class="col-md-5 text-right">Opening As On : </div>
                <div class="col-md-6" id="OpeningDate"></div>
            </div>
            <div class="col-md-12">
                <div class="col-md-5 text-right">Cash : </div>
                <div class="col-md-6" id="OpeningCash"></div>
            </div>
            <div class="col-md-12">
                <div class="col-md-5 text-right">Bank : </div>
                <div class="col-md-6" id="OpeningBank"></div>
            </div>
            <div class="col-md-12">
                <div class="col-md-5 text-right">Bank(Not Cleared): </div>
                <div class="col-md-6" id="OpeningNCBank"></div>
            </div>  

        </div>

    </div>
  

    <div class="row summaryboxes">

        <div class="clearfix visible-sm-block">

        </div>

    </div>
    <div class="row">
        &nbsp;
    </div>
    <div class="row tableContainer">
        <div class="col-md-12">
            <table id="expenseDetailTable" class="table table-striped table-bordered table-hover customgrd" cellspacing="0" width="100%">
                <thead>
                    <tr class="text-center TableHead">
                        <th>SI No</th>
                        <th>Account</th>
                        <th>Payment mode</th>
                        <th>Description</th>
                        <th>Amount</th>
                        <th>Expense Date</th>
                        <th>Origin Company</th>
                        <th>...</th>
                        <th>...</th>
                        <th>ID</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
    <div class="form-group col-md-12">
        <div class="form-group col-md-12">
            <div class="col-md-4"></div>
            <div class="col-md-4"></div>
            <div class="col-md-4">
                <div class="col-md-12 text-right">
                    <div class="rightAmtCaption">Net Expense</div>
                </div>
                <div class="col-md-12 text-right">
                    <div class="rightAmt" id="TotalAmt">₹ 0.00</div>
                </div>
            </div>
        </div> 
    </div>

</div>

@*Model*@
<div class="modal fade" id="AddOtherexpenseModel" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" aria-labelledby="myModalLabel" aria-hidden="true" @*style="overflow-y:hidden !important;"*@>
    <div class="modal-dialog" role="document" style="min-width:900px !important;">
        <div class="modal-content">
            <div class="modal-header" style="background-image: url('content/images/73a6f1c8.png');background-repeat: repeat;height: 36px;padding: 3px;border-bottom:2px solid rgb(149, 76, 132)!important;">
                <div class="container-fluid" style="padding-right: 0px;">
                    <div class="col-md-4">
                        <h3 class="modal-title SCHeader" id="modelContextLabel"></h3>

                        <div class="col-md-12">
                            <span style="font-weight: 600;font-size: 20px;" id="AddOrEditSpan">Add New</span>
                                                       
                        </div>
                    </div>
                    <div class="col-md-8" style="padding-right: 4px;">
                        <span class="rightAmtCaption" style="margin-right:2% !important;padding-left:140px;">Amount :</span>
                        <span class="rightAmt" style="font-size:20px;margin-right:0px !important;" id="creditdAmt">₹ 0.00</span>

                        <a class="close" data-dismiss="modal" aria-label="Close"><i style="font-size: 33px;" class="fa fa-times-circle" aria-hidden="true"></i></a>
                    </div>

                </div>
            </div>

          
            <div class="modal-body">
                <div class="container-fluid">
                    <div class="col-md-12">
                        @using (Ajax.BeginForm("InsertUpdateOtherExpense", "OtherExpenses", new AjaxOptions { HttpMethod = "POST",OnBegin="Validation", OnSuccess = "SaveSuccess", OnFailure = "SaveFailure", AllowCache = false, LoadingElementId = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form", id = "OtherExpenseModal", autocomplete = "off" }))

                        {
                            @Html.AntiForgeryToken()

                          
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="form-group col-md-12">
                                <div class="col-md-6">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.ExpenseDate, htmlAttributes: new { @class = "control-label" })
                                        @Html.HiddenFor(model => model.ID, htmlAttributes: new { @Value = Guid.Empty })
                                    </div>                                   
                                        <div class="col-md-12">
                                            @Html.EditorFor(model => model.ExpenseDate, new { htmlAttributes = new { @class = "form-control HeaderBox BlockEnter datepicker", @id = "expenseDateModal" } })
                                            @Html.ValidationMessageFor(model => model.ExpenseDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group col-md-12">
                                <div class="col-md-6">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.AccountCode, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-md-12">
                                        @Html.DropDownListFor(model => model.AccountCode, Model.AccountTypes, "-- Select Account --", new { @class = "form-control BlockEnter", value = -1, style = "padding:4px 12px;", @id = "AccountCode", @onchange = "AccountCodeOnchange(this)" })
                                        @Html.ValidationMessageFor(model => model.AccountCode, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.IsReverse, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-md-12">
                                        @{
                                            List<SelectListItem> listIsReverse = new List<SelectListItem>();
                                            listIsReverse.Add(new SelectListItem
                                            { Text = "Regular", Value = "false" });
                                            listIsReverse.Add(new SelectListItem
                                            { Text = "Reversal", Value = "true" }); 
                                        }
                                        @Html.DropDownListFor(model => model.IsReverse, listIsReverse, new { @class = "form-control BlockEnter", style = "padding:4px 12px;", @id = "IsReverse" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group col-md-12">
                                <div class="col-md-6">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.EmpTypeCode, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-md-12">
                                            @Html.DropDownListFor(model => model.EmpTypeCode, Model.EmployeeTypeList, "-- Select Employee Type --", new { @class = "form-control BlockEnter", value = -1, style = "padding:4px 12px;", @onchange = "EmployeeTypeOnchange(this)" })
                                            @Html.ValidationMessageFor(model => model.EmpTypeCode, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                 <div class="col-md-12">
                                     @Html.LabelFor(model => model.EmpID, htmlAttributes: new { @class = "control-label" })
                                 </div>
                                 <div class="col-md-12">
                                         @Html.DropDownListFor(model => model.EmpID, new List<SelectListItem>(), "-- Select Employee --", new { @class = "form-control BlockEnter", value = -1, style = "padding:4px 12px;",@onchange= "SelectEmployeeCompanyOnchange(this)" })
                                         @Html.ValidationMessageFor(model => model.EmpID, "", new { @class = "text-danger" })
                                 </div>
                             </div>
                            </div>
                            <span id="btnAddEmployee" title="Add Employee/Other" style="z-index: 12;position: absolute;margin-top:18%;right: 7%;"><img src="~/Content/images/add.png" style="width:12px;cursor:pointer;" onclick="AddEmployee();"/></span>

                            <div class="form-group col-md-12">
                                <div class="col-md-6">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.PaidFromCompanyCode, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-md-12">
                                        @Html.DropDownListFor(model => model.PaidFromCompanyCode, Model.CompanyList, "-- Select Company --", new { @class = "form-control BlockEnter", value = -1, style = "padding:4px 12px;", @id = "CompanyCode", @onchange = "companyChange(this)" })

                                        @Html.ValidationMessageFor(model => model.PaidFromCompanyCode, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div id="EmployeeDiv" hidden="hidden" class="addEmp">

                                        <h5 style="text-align:center;font-size:14px;">Add New Employee/Other</h5>
                                       <div class="row col-md-10" style="margin-left:12px"><span>Sub Type :</span><span id="sbtyp">Not Selected</span></div>
                                        <div class="row col-md-10" style="margin-left:12px;margin-bottom:5px;"><span>Company :</span><span id="cmpny">Not Selected</span></div>

                                        @Html.EditorFor(model => model.EmpName, new { htmlAttributes = new { @class = "form-control", placeholder = "Employee Name", style = "width:80% !important;font-size:12px;padding-left:5px;margin-left:20px;height:28px;border-radius:4px;border:1px solid #ccc;" } })
                                        @Html.ValidationMessageFor(model => model.EmpName, "", new { @class = "text-danger", style = "padding-left:5px;margin-left:20px;" })

                                        <br />
                                        <a class="btn btn-primary" style="height:30px;margin-left:30%;" onclick="SaveEmployee();">Save</a>
                                        <a class="btn btn-default" style="height:30px;" onclick="CancelEmployee();">Cancel</a>
                                    </div>
                                </div>


                            </div>

                                <div class="form-group col-md-12">
                                    <div class="col-md-6">
                                        <div class="col-md-12">
                                            @Html.LabelFor(model => model.PaymentMode, htmlAttributes: new { @class = "control-label" })
                                        </div>

                                        <div class="col-md-12">

                                            @Html.DropDownListFor(model => model.PaymentMode, Model.paymentModeList, "-- Select payment mode --", new { @class = "form-control BlockEnter", value = -1, style = "padding:4px 12px;", @id = "paymentMode", @onchange = "PaymentModeOnchange(this)" })

                                            @Html.ValidationMessageFor(model => model.PaymentMode, "", new { @class = "text-danger" })

                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="col-md-12">
                                            @Html.LabelFor(model => model.BankCode, htmlAttributes: new { @class = "control-label" })
                                        </div>

                                        <div class="col-md-12">

                                            @Html.DropDownListFor(model => model.BankCode, Model.bankList, "-- Select Bank --", new { @class = "form-control BlockEnter", value = -1, style = "padding:4px 12px;", @id = "BankCode", @onchange = "BankOnchange(this)" })

                                            @Html.ValidationMessageFor(model => model.BankCode, "", new { @class = "text-danger" })

                                        </div>
                                    </div>


                                </div>

                                <div class="form-group col-md-12">
                                    <div class="col-md-6">
                                        <div class="col-md-12">
                                            @Html.LabelFor(model => model.ExpenseRef, htmlAttributes: new { @class = "control-label" })
                                        </div>

                                        <div class="col-md-12">

                                            @Html.EditorFor(model => model.ExpenseRef, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.ExpenseRef, "", new { @class = "text-danger" })

                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="col-md-12">
                                            @Html.LabelFor(model => model.ChequeDate, htmlAttributes: new { @class = "control-label" })
                                        </div>

                                        <div class="col-md-12">
                                            @Html.EditorFor(model => model.ChequeDate, new { htmlAttributes = new { @class = "form-control HeaderBox BlockEnter datepicker",@id= "ChequeDate" } })
                                            @Html.ValidationMessageFor(model => model.ChequeDate, "", new { @class = "text-danger" })


                                        </div>
                                    </div>

                                </div>

                                <div class="form-group col-md-12">
                                    <div class="col-md-6">
                                        <div class="col-md-12">
                                            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
                                        </div>

                                        <div class="col-md-12">

                                            @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control HeaderBox BlockEnter Amount", @id = "Amount", onkeypress = "return isNumber(event)", @onclick = "SelectAllValue(this);" } })
                                            @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })

                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="col-md-12">
                                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                        </div>
                                        <div class="col-md-12">

                                            @Html.TextAreaFor(model => model.Description, 3, 50, new { htmlAttributes = new { @class = "form-control HeaderBox BlockEnter", @id = "Description" } })

                                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })

                                        </div>
                                    </div>

                                </div>



                                <div class="form-group" style="display:none;">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input id="btnSaveOtherExpense" type="submit" value="Create" class="btn btn-default" />
                                    </div>
                                </div>
                        }


                    </div>
                   
                 
                </div>
            </div>
            <div class="modal-footer" style="background-image: url('content/images/73a6f1c8.png');background-repeat: repeat;height: 50px;padding: 7px;">
                <a class="btn btn-primary" onclick="Save()"><i class="glyphicon glyphicon-floppy-disk"></i> Save</a>
                <a class="btn btn-default" onclick="Reset()"><i class="glyphicon glyphicon-refresh"></i> Reset</a>

            </div>

        </div>
    </div>
</div>





@section Scripts {
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatable")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jqueryunobtrusiveajaxvalidate")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/OtherExpense")
}
