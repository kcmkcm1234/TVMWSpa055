@model UserInterface.Models.CustomerOutStandingViewModel
@using UserInterface.App_Start
@{
    ViewBag.Title = "Customer OutStanding";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}

@section styles {
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatable")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatableButtons")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/css/select2")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatableFixedHeader")

}
<style>
    .select2-container--default .select2-selection--single .select2-selection__rendered {
        line-height: 20px !important;
    }

    table.dataTable tr.odd {
        background-color: rgba(148, 78, 132, 0.16);
    }

    table.dataTable tr.even {
        background-color: white;
    }
</style>
<div style="width:100%;">
    <ol class="breadcrumb">
        <li><a href=@Url.Action("Index","Report")><i class="fa fa-print"></i> Reports</a></li>
        <li class="active">@ViewBag.Title</li>
    </ol>
</div>



<div class="preloader" id="prelaoder">
    <div class="col-md-12">
        <div class="col-md-12">Loading </div>
        <div class="col-md-12" style="margin-left:5%;margin-top:-3%;"><img src="~/Content/images/loading.gif" class="preloaderImg" /></div>
    </div>

</div>
<div class="col-md-12">
    &nbsp;
    &nbsp;
    &nbsp;
    &nbsp;
    &nbsp;
    &nbsp;
</div>


<div class="form-horizontal">

    <div class="col-md-9" style="margin-top:10px;">
        <div class="col-md-3">
            @Html.LabelFor(model => model.FromDate, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-12">
                @Html.TextBox("fromdate", "", new { @class = "form-control datepicker HeaderBox BlockEnter col-md-3", @Value = ViewBag.fromdate, @onchange = "OnCallChange()" })


            </div>
        </div>
        <div class="col-md-3">
            @Html.LabelFor(model => model.ToDate, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-12">
                @Html.TextBox("todate", "", new { @class = "form-control datepicker HeaderBox BlockEnter col-md-3", @Value = ViewBag.todate, @onchange = "OnCallChange()" })
            </div>
        </div>




        <div class="col-md-3">
            @Html.LabelFor(model => model.InvoiceType, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-12" style="padding:0">
                @if (Model.InvoiceTypeAccess == true)
                {
                    <div class="col-md-12">

                        @{
                            List<SelectListItem> InvoiceTypesList = new List<SelectListItem>();
                            InvoiceTypesList.Add(new SelectListItem
                            { Text = "--Select--", Value = "ALL", Selected = true });
                            InvoiceTypesList.Add(new SelectListItem
                            { Text = "Regular Invoice", Value = "RB" });
                            InvoiceTypesList.Add(new SelectListItem
                            { Text = "WB Invoice", Value = "WB" });
                            InvoiceTypesList.Add(new SelectListItem
                            { Text = "PB Invoice", Value = "PB" });
                            InvoiceTypesList.Add(new SelectListItem
                            { Text = "WB & PB Invoice", Value = "WB/PB" });
                        }
                        @Html.DropDownListFor(model => model.InvoiceType, InvoiceTypesList, new { @class = "form-control BlockEnter", style = "padding:4px 12px;width: 100 %", @id = "ddlInvoiceTypes", @onchange = "OnCallChange();" })
                    </div>
                            }
                            else if (Model.InvoiceTypeAccess == false)
                            {
                                <div class="col-md-12">
                                    @{
                                        List<SelectListItem> InvoiceTypesList = new List<SelectListItem>();

                                        InvoiceTypesList.Add(new SelectListItem
                                        { Text = "Regular Invoice", Value = "RB" });

                                    }
                                    @Html.DropDownListFor(model => model.InvoiceType, InvoiceTypesList, new { @class = "form-control BlockEnter", style = "padding:4px 12px;width: 100 %", @id = "ddlInvoiceTypes", @onchange = "OnCallChange();" })
                                </div>
                                        }
                                        </div>
                                       
                                    </div>
    </div>

    <div class="col-md-3" style="min-height:25px">
        @{
            var data = new { ActionType = "ListWithReset" };
            @Html.Action("ChangeButtonStyle", "Report", data);
        }
    </div>

    <div class="col-md-6" style="margin-left: 15px;">
        @Html.LabelFor(model => model.Search, htmlAttributes: new { @class = "control-label", style = "visibility:hidden"})
        <div class="col-md-12">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Search" id="Search">
                <div class="input-group-btn">
                    <button class="btn btn-default" type="submit" style="height:28px" onclick="OnChangeCall()"><i class="glyphicon glyphicon-search"></i></button>
                </div>
            </div>
        </div>
    </div>

</div>

<div class="row">
    &nbsp;
</div>



<div id="divHeader"></div>
<div class="row tableContainer">
    <div class="col-md-12" id="divCustomerPaymentLedger">
        <table id="customerOutstandingTable" class="table stripe" cellspacing="0" width="100%">
            <thead>
                <tr class="text-center TableHead">
                    <th>Customer ID</th>
                    <th>Customer Name</th>
                    <th>Opening Balance (A)</th>
                    <th>Debit (B)</th>
                    <th>Credit (C)</th>
                    <th>Outstanding Amount (A+(B-C))</th>

                </tr>
            </thead>
        </table>
    </div>


</div>

@section Scripts {
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatable")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jsZip")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatableButtons")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/select2")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/CustomerOutStanding");


}
