@model UserInterface.Models.CustomerPaymentLedgerViewModel
@using UserInterface.App_Start
@{
    ViewBag.Title = "Customer Payment Ledger";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}

@section styles {
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatable")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatableButtons")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/css/select2")
@Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatableFixedHeader")

    <style>
        .select2-container--default .select2-selection--single .select2-selection__rendered {
            line-height: 20px !important;
        }

        table.dataTable tr.odd {
            background-color: rgba(148, 78, 132, 0.16);
        }

        table.dataTable tr.even {
            background-color: white;
        }        
   
        .select2-container--default .select2-selection--multiple .select2-selection__choice{
            color:black;
        }
    
    </style>
}


<div style="width:100%;">
    <ol class="breadcrumb">
        <li><a href=@Url.Action("Index","Report")><i class="fa fa-print"></i> Reports</a></li>
        <li class="active">@ViewBag.Title</li>
    </ol>
</div>



<div class="preloader" id="prelaoder">
    <div class="col-md-12">
        <div class="col-md-12">Loading </div>
        <div class="col-md-12" style="margin-left:5%;margin-top:-3%;"><img src="~/Content/images/loading.gif" class="preloaderImg" /></div>
    </div>

</div>
<div class="col-md-12">
    &nbsp;
    &nbsp;
    &nbsp;
    &nbsp;
    &nbsp;
    &nbsp;
</div>
<div class="form-horizontal">
 
    <div class="col-md-9" style="margin-top:10px;">
        <div class="col-md-3">
            @Html.Label("From Date", htmlAttributes: new { @class = "control-label" })
            <div class="col-md-12">
                @Html.TextBox("fromdate", "", new { @class = "form-control datepicker HeaderBox BlockEnter col-md-3", @Value = ViewBag.fromdate, @id = "fromDate", @onchange = "OnCallChange()" })


            </div>
        </div>
        <div class="col-md-3">
            @Html.Label("To Date", htmlAttributes: new { @class = "control-label" })
            <div class="col-md-12">
                @Html.TextBox("todate", "", new { @class = "form-control datepicker HeaderBox BlockEnter col-md-3",  @Value = ViewBag.todate, @id = "toDate", @onchange = "OnCallChange()" })
            </div>
        </div>
        <div class="col-md-6" id="customernameddl" style="visibility:hidden;">
            @Html.LabelFor(model => model.CustomerCode, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-12">
                @Html.DropDownListFor(model => model.CustomerCode, Model.customerList, new { @class = "form-control BlockEnter", @onchange = "RefreshCustomerPaymentLedgerTable()", @multiple = "multiple" })
                @Html.ValidationMessageFor(model => model.CustomerCode, "", new { @class = "text-danger" })

            </div>
        </div>

            <div class="col-md-3">
                @Html.LabelFor(model => model.CompanyCode, htmlAttributes: new { @class = "control-label" })
                <div class="col-md-12">
                    @Html.DropDownListFor(model => model.CompanyCode, Model.companiesList, new { @class = "form-control BlockEnter", @id = "companyCode", @onchange = "OnCallChange()" })
                    @Html.ValidationMessageFor(model => model.CompanyCode, "", new { @class = "text-danger" })

                </div>
            </div>


        <div class="col-md-3">
            @*<div class="col-md-12" style="padding:0">*@
                @Html.LabelFor(model => model.InvoiceType, htmlAttributes: new { @class = "control-label " })
            @*</div>*@
            <div class="col-md-12" style="padding:0">
@if (Model.InvoiceTypeAccess == true)
{
                <div class="col-md-12">
                    @{
                        List<SelectListItem> InvoiceTypesList = new List<SelectListItem>();
                        InvoiceTypesList.Add(new SelectListItem
                        { Text = "--Select--", Value = "ALL", Selected = true });
                        InvoiceTypesList.Add(new SelectListItem
                        { Text = "Regular Invoice", Value = "RB" });
                        InvoiceTypesList.Add(new SelectListItem
                        { Text = "WB Invoice", Value = "WB" });
                        InvoiceTypesList.Add(new SelectListItem
                        { Text = "PB Invoice", Value = "PB" });
                        InvoiceTypesList.Add(new SelectListItem
                        { Text = "WB & PB Invoice", Value = "WB/PB" });
                    }
                    @Html.DropDownListFor(model => model.InvoiceType, InvoiceTypesList, new { @class = "form-control BlockEnter", style = "padding:4px 12px;width: 100 %", @id = "ddlInvoiceTypes", @onchange = "OnCallChange();" })
                </div>
                @*<div class="col-md-1"></div>
                <div class="col-md-1"></div>*@
                        }
                        else if (Model.InvoiceTypeAccess == false)
                        {
                            <div class="col-md-12">
                                @{
                                    List<SelectListItem> InvoiceTypesList = new List<SelectListItem>();
                                    
                                    InvoiceTypesList.Add(new SelectListItem
                                    { Text = "Regular Invoice", Value = "RB" });
                                   
                                }
                                @Html.DropDownListFor(model => model.InvoiceType, InvoiceTypesList, new { @class = "form-control BlockEnter", style = "padding:4px 12px;width: 100 %", @id = "ddlInvoiceTypes", @onchange = "OnCallChange();" })
                            </div>
                                    }
            </div>
        </div>           
    </div>
    <div class="col-md-3" style="min-height:25px">
        @{
            var data = new { ActionType = "ListWithPrint" };
            @Html.Action("ChangeButtonStyle", "Report", data);
        }
    </div>

    <div class="row summaryboxes">

        <div class="clearfix visible-sm-block">

        </div>

    </div>
        @*<div class="form-group col-md-12">
            <div class="col-md-12 text-right">
                <div style="font-size:medium">NetDue Total: <small><span id="salessummaryamount" style="font-size:medium;font-weight:bold"> 0.00</span></small></div>
            </div>
        </div>*@
        <div class="row">
            &nbsp;
        </div>
    <div id="divHeader"></div>
        <div class="row tableContainer">
            <div class="col-md-12" id="divCustomerPaymentLedger">
                <table id="customerpaymentledgertable" class="table stripe" cellspacing="0" width="100%">
                    <thead>
                        <tr class="text-center TableHead">
                            <th>Date</th>
                            <th>Type</th>
                            <th>Ref</th>
                            <th>ID</th>
                            <th>CustomerName</th>
                            <th>Company</th>
                            <th>Remarks</th>
                            <th>Debit</th>
                            <th>Credit</th>
                            <th>Balance</th>                           

                        </tr>
                    </thead>
                </table>
            </div>
            
            
        </div>
    @using (Ajax.BeginForm("Download", "PDFGenerator", null, new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "alert('done')", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form", @id = "EmployeeForm" }))
            {
        @Html.HiddenFor(model => model.pdfToolsObj.Content, htmlAttributes: new { @class = "", Value = "", @id = "hdnContent" })
        @Html.HiddenFor(model => model.pdfToolsObj.Headcontent, htmlAttributes: new { @class = "", Value = "", @id = "hdnHeadContent" })
        @Html.HiddenFor(model => model.pdfToolsObj.HeaderText, htmlAttributes: new { @class = "", Value = "Customer Payment Ledger Report" })
        <input type="submit" value="Download" id="btnSend" onclick="GetHtmlData();" />
    }
    <div id="customtbl" style="display:none">

    </div>
    </div>







    @section Scripts {
        @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatable")
        @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jsZip")
        @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatableButtons")
        @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/select2")
        <script src="~/Scripts/UserJS/PDF.js"></script>
        @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/CustomerPaymentLedger")
       
    }





       
