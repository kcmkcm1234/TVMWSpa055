@model UserInterface.Models.SupplierPaymentsViewModel
@using SPAccounts.DataAccessObject.DTO
@using UserInterface.App_Start

@{
    ViewBag.Title = "Make Payments";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
@section styles {
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatable")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatablecheckbox")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatableSelect")
   @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/css/select2") 
}

<div style="width:100%;">
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-truck"></i> Sales</a></li>
        <li class="active">@ViewBag.Title</li>
    </ol>
</div>
<!-- Main content -->
<section class="content" id="main">

    <div class="row">
        <div class="" id="btnPatchList" style="min-height:25px">

            @{
                var data = new { ActionType = "List" };
                @Html.Action("ChangeButtonStyle", "SupplierPayments", data);
            }
        </div>
    </div>
    <div class="row summaryboxes">
        <div class="col-md-3 col-sm-6 col-xs-12">
            <div class="info-box">
                <span class="info-box-icon bg-yellow"><i class="ion ion-ios-people-outline"></i></span>

                <div class="info-box-content">
                    <span class="info-box-text">Overdue <b><span class="info-box-more" id="overdueamt">₹0.00</span></b></span>
                    <span class="info-box-more">Invoices <small><span id="overdueinvoice">0</span></small></span>
                </div>
                <!-- /.info-box-content -->
            </div>
            <!-- /.info-box -->
        </div>
        <div class="col-md-3 col-sm-6 col-xs-12">
            <div class="info-box">
                <span class="info-box-icon bg-aqua"></span>

                <div class="info-box-content">
                    <span class="info-box-text">Open Invoices <b><span class="info-box-more" id="openamt">₹0.00</span></b></span>
                    <span class="info-box-more">Invoices <small><span id="openinvoice">0</span></small></span>
                </div>
                <!-- /.info-box-content -->
            </div>
            <!-- /.info-box -->
        </div>
        <!-- /.col -->
        <!-- /.col -->
        <!-- fix for small devices only -->
        <div class="clearfix visible-sm-block"></div>

        <div class="col-md-3 col-sm-6 col-xs-12">
            <div class="info-box">
                <span class="info-box-icon bg-green"><i class="ion ion-ios-cart-outline"></i></span>

                <div class="info-box-content">
                    <span class="info-box-text">Fully Paid <b><span class="info-box-more" id="paidamt">₹0.00</span></b></span>
                    <span class="info-box-more">Invoices <small><span id="paidinvoice">0</span></small></span>
                </div>
                <!-- /.info-box-content -->
            </div>
            <!-- /.info-box -->
        </div>
        <!-- /.col -->
        <!-- /.col -->
    </div>
    <div class="row">
        &nbsp;
    </div>
    <div class="row tableContainer">
        <div class="col-md-12">
            <table id="SupPayTable" class="table table-striped table-bordered table-hover customgrd" cellspacing="0" width="100%">
                <thead>
                    <tr class="text-center TableHead">
                        <th>ID</th>
                        <th>Entry No.</th>
                        <th>Payment Date</th>
                        <th>Payment Ref.</th>
                        <th>Supplier</th>
                        <th>Payment Mode</th>
                        <th>Type</th>
                        <th>Credit Note No.</th>
                        <th>Amount Paid(₹)</th>
                        <th>Advance Paid(₹)</th>
                        <th>...</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>


</section>
<section class="content">


    <div id="myNav" class="overlay">
        <div class="overlay-content">
            <div class="row" id="OverlayHeader">
                <div class="col-md-6" style="text-align:left">
                    <span id="lblheader" class="SCHeader">New Payment</span>
                </div>
                <div class="col-md-6" id="btnPatchAdd" style="min-height:25px; padding-right:25px;">
                    @{
                        var data1 = new { ActionType = "Add" };
                        @Html.Action("ChangeButtonStyle", "SupplierPayments", data1);
                    }
                </div>
            </div>

            <div class="EntryForms" style="height:550px">
                @using (Ajax.BeginForm("InsertUpdatePayments", "SupplierPayments", new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "SaveSuccess", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form", @id = "SupplierPaymentForm" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.Hidden("BindValue", "", htmlAttributes: new { @class = "", Value = ViewBag.value });
                    <div class="col-md-12 headSeperator"><i class="fa fa-th ig-yellow" aria-hidden="true"></i> Basic Details</div>
                    <div class="col-md-12">
                        <div class="col-md-8">
                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "", value = Guid.Empty })
                                    @Html.HiddenFor(model => model.AdvanceAmount, htmlAttributes: new { @class = "", value =0 })
                                    @Html.HiddenFor(model => model.hdfSupplierID, htmlAttributes: new { @class = "", value ="" })
                                    @Html.HiddenFor(model => model.hdfType, htmlAttributes: new { @class = "", value = "" })
                                    @Html.HiddenFor(model => model.hdfCreditAmount, htmlAttributes: new { @class = "", value = "" })
                                    @Html.HiddenFor(model => model.paymentDetailhdf, htmlAttributes: new { @class = "", value = "", @id = "paymentDetailhdf" })
                                    @Html.LabelFor(model => model.supplierObj.ID, htmlAttributes: new { @class = "control-label " })
                                    @Html.HiddenFor(model => model.hdnFileID, htmlAttributes: new { @class = "", @id = "hdnFileDupID", @value = Guid.Empty })
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.supplierObj.ID, Model.supplierObj.SupplierList, "-- Select Supplier --", new { @class = "form-control BlockEnter", value = -1, style = "padding:4px 12px;", @id = "Supplier", onchange = "SupplierChange();" })
                                        @Html.ValidationMessageFor(model => model.supplierObj.ID, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1 mandatory"></div>
                                    <div class="col-md-1"></div>
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.PaymentDate, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.PaymentDate, new { htmlAttributes = new { @class = "form-control HeaderBox datepicker", @id = "PaymentDate", @autofocus = true, Value = @ViewBag.Currentdate } })
                                        @Html.ValidationMessageFor(model => model.PaymentDate, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1 mandatory"></div>
                                    <div class="col-md-1"></div>
                                </div>
                            </div>
                            <div class="form-group col-md-12"></div>

                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label " })
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @{
                                            List<SelectListItem> listAttributeType = new List<SelectListItem>();
                                            listAttributeType.Add(new SelectListItem
                                            { Text = "Payment", Value = "P" });
                                            listAttributeType.Add(new SelectListItem
                                            { Text = "Credit Adujustment", Value = "C" });
                                        }
                                        @Html.DropDownListFor(model => model.Type, listAttributeType, new { @class = "form-control BlockEnter", value = -1, style = "padding:4px 12px;", onchange = "TypeOnChange();" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>
                            </div>
                            <div class="form-group col-md-6" id="ddlCreditDiv" style="visibility:hidden">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.CreditID, htmlAttributes: new { @class = "control-label " })
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.CreditID, new SelectList(Enumerable.Empty<SelectListItem>(), "CreditID", "CreditName"), "-- Select Credit --", new { @class = "form-control BlockEnter", value = -1, style = "padding:4px 12px;", @id = "CreditID", onchange = "ddlCreditOnChange()" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>
                            <div class="form-group col-md-12"></div>

                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.PaymentMode, htmlAttributes: new { @class = "control-label " })
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.PaymentMode, Model.PaymentModesObj.PaymentModesList, "-- Select Payment Mode --", new { @class = "form-control BlockEnter", value = -1, style = "padding:4px 12px;", @id = "PaymentMode", onchange = "PaymentModeChanged();" })
                                        @Html.ValidationMessageFor(model => model.PaymentMode, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1 mandatory"></div>
                                    <div class="col-md-1"></div>
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.ChequeDate, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.ChequeDate, new { htmlAttributes = new { @class = "form-control HeaderBox datepicker", @id = "ChequeDate", @autofocus = true } })
                                        @Html.ValidationMessageFor(model => model.ChequeDate, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>
                            </div>
                            <div class="form-group col-md-12"></div>

                            <div class="form-group col-md-6" id="depositTo">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.BankCode, htmlAttributes: new { @class = "control-label " })
                                    @Html.HiddenFor(model => model.DepWithdID, htmlAttributes: new { @class = "" })
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.BankCode, Model.bankObj.BanksList, "-- Select Bank --", new { @class = "form-control BlockEnter", value = -1, style = "padding:4px 12px;", @id = "BankCode" })
                                        @Html.ValidationMessageFor(model => model.BankCode, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1 mandatory"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>
                          

                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.PaymentRef, htmlAttributes: new { @class = "control-label" })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.PaymentRef, new { htmlAttributes = new { @class = "form-control HeaderBox ", @id = "PaymentRef" } })
                                        @Html.ValidationMessageFor(model => model.PaymentRef, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>
                            <div class="form-group col-md-12"></div>

                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.PaidFromComanyCode, htmlAttributes: new { @class = "control-label " })
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.PaidFromComanyCode, Model.CompanyObj.CompanyList, "-- Select Company --", new { @class = "form-control BlockEnter", value = -1, style = "padding:4px 12px;", @id = "PaidFromComanyCode" })
                                        @Html.ValidationMessageFor(model => model.PaidFromComanyCode, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1 mandatory"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>
                            <div class="form-group col-md-12"></div>

                        </div>
                        <div class="col-md-4" id="CommonFigure" style="padding-top:2%;border-left:1px solid #64e564">
                            <div class="form-group col-md-12">
                                <div class="col-md-12 text-right">
                                    <div class="rightAmtCaption">Outstanding  Amount</div>
                                </div>
                                <div class="col-md-12 text-right">
                                    <div class="rightAmt" id="invoicedAmt">₹ 0.00</div>
                                </div>
                                <div class="col-md-12"  id="outstandingdetailsdiv" style="text-size-adjust:10%">
                                    <div id="lblOutstandingdetails"></div>
                                </div>
                            </div>
                            <div class="form-group col-md-12">
                                <div class="col-md-12 text-right">
                                    <div class="rightAmtCaption">Amount Paid</div>
                                </div>
                                <div class="col-md-12 text-right">
                                    <div class="rightAmt" id="paidAmt">₹ 0.00</div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-12  ">&nbsp;</div>


                if (Session["AppUA"] != null)
                {
                    AppUA _appUA = Session["AppUA"] as AppUA;
                    if (@_appUA.RolesCSV.Contains("CEO") || @_appUA.RolesCSV.Contains("SAdmin"))
                    {
                        <div class="" id="ApprovalStatus">
                            <div class="col-md-12 headSeperator"><i class="fa fa-th ig-green" aria-hidden="true"></i>Document Status</div>
                            <div class="col-md-12">
                                <div class="col-md-8">
                                    <div class="form-group col-md-6">
                                        <div class="col-md-12">
                                            @Html.LabelFor(model => model.ApprovalStatus, htmlAttributes: new { @class = "control-label " })
                                        </div>
                                        <div class="col-md-12">
                                            <div class="col-md-10"> 
                                                @Html.DropDownListFor(model => model.ApprovalStatus,Model.ApprovalStatusObj.ApprovalStatusList, new { @class = "form-control BlockEnter", style = "padding:4px 12px;", @id = "ddlApprovalStatus" })
                                            </div>
                                            <div class="col-md-1"></div>
                                            <div class="col-md-1"></div>
                                        </div>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <div class="col-md-12">
                                            @Html.LabelFor(model => model.ApprovalDate, htmlAttributes: new { @class = "control-label" })
                                        </div>
                                        <div class="col-md-12">
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.ApprovalDate, new { htmlAttributes = new { @class = "form-control HeaderBox", @id = "ApprovalDate", @disabled = true } })
                                            </div>
                                            <div class="col-md-1"></div>
                                            <div class="col-md-1"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                                                }
                                                else
                                                {
                                                    <div class="" id="ApprovalStatus">
                                                        <div class="col-md-12 headSeperator"><i class="fa fa-th ig-green" aria-hidden="true"></i>Document Status</div>
                                                        <div class="col-md-12">
                                                            <div class="col-md-8">
                                                                <div class="form-group col-md-6">
                                                                    <div class="col-md-12">
                                                                        @Html.LabelFor(model => model.ApprovalStatus, htmlAttributes: new { @class = "control-label " })
                                                                    </div>
                                                                    <div class="col-md-12">
                                                                        <div class="col-md-10">
                                                                            @Html.DropDownListFor(model => model.ApprovalStatus, Model.ApprovalStatusObj.ApprovalStatusList, new { @class = "form-control BlockEnter", style = "padding:4px 12px;", @id = "ddlApprovalStatus", @disabled = true })
                                                                        </div>
                                                                        <div class="col-md-1"></div>
                                                                        <div class="col-md-1"></div>
                                                                    </div>
                                                                </div>
                                                                <div class="form-group col-md-6">
                                                                    <div class="col-md-12">
                                                                        @Html.LabelFor(model => model.ApprovalDate, htmlAttributes: new { @class = "control-label" })
                                                                    </div>
                                                                    <div class="col-md-12">
                                                                        <div class="col-md-10">
                                                                            @Html.EditorFor(model => model.ApprovalDate, new { htmlAttributes = new { @class = "form-control HeaderBox", @id = "ApprovalDate", @disabled = true } })
                                                                        </div>
                                                                        <div class="col-md-1"></div>
                                                                        <div class="col-md-1"></div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                }
                                            }



                    <div class="col-md-12 headSeperator"><i class="fa fa-th ig-aqua" aria-hidden="true"></i> Outstanding Invoices</div>
                    <div class="col-md-12  ">
                        <div class="col-md-9"></div>
                        <div class="col-md-3">

                            <div class="form-group col-md-8">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.TotalPaidAmt, htmlAttributes: new { @class = "control-label", @id = "lblTotalAmtPaidCptn" })
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.TotalPaidAmt, new { htmlAttributes = new { @class = "form-control HeaderBox selecttext", @id = "TotalPaidAmt", style = "text-align: right", onchange = "AmountChanged();" } })
                                        @Html.ValidationMessageFor(model => model.TotalPaidAmt, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group col-md-4"></div>
                        </div>
                    </div>

                    <div class="col-md-12">
                        <div class="col-md-12" style="padding-left:5%; padding-right:10%">
                            <table id="tblOutStandingDetails" class="table table-striped table-bordered table-hover" cellspacing="0" width="100%">
                                <thead>
                                    <tr class="text-center">
                                        <th>ID</th>
                                        <th></th>
                                        <th>Description</th>
                                        <th>Due Date</th>
                                        <th>Total Inv Amount (₹)</th>
                                        <th>Other Payments (₹)</th>
                                        <th>Balance Due (₹)</th>
                                        <th>Payment (₹)</th>
                                        <th>PaymentDetailID</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                    <div class="col-md-12" style="padding-right:10%">
                        <div class="col-md-8"></div>
                        <div class="col-md-4">
                            <div class="form-group col-md-12">
                                <div class="col-md-8" style="text-align: right">
                                    @Html.Label("Total Amount Paid:", htmlAttributes: new { @class = "control-label ", @id = "lblTotalPaidAmtCptn" })
                                </div>
                                <div class="col-md-4" style="text-align: right">
                                    @Html.Label("0", htmlAttributes: new { @class = "control-label ", @id = "lblTotalPaidAmt" })
                                </div>
                            </div>
                            <div class="form-group col-md-12">
                                <div class="col-md-8" style="text-align: right">
                                    @Html.Label("Payment Applied:", htmlAttributes: new { @class = "control-label ", @id = "lblPaymentAppliedCptn" })
                                </div>
                                <div class="col-md-4" style="text-align: right">
                                    @Html.Label("0", htmlAttributes: new { @class = "control-label ", @id = "lblPaymentApplied" })
                                </div>
                            </div>
                            <div class="form-group col-md-12">
                                <div class="col-md-8" style="text-align: right">
                                    @Html.Label("Credit Paid:", htmlAttributes: new { @class = "control-label ", @id = "lblCreditCptn" })
                                </div>
                                <div class="col-md-4" style="text-align: right">
                                    @Html.Label("0", htmlAttributes: new { @class = "control-label ", @id = "lblCredit" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12 headSeperator"><i class="fa fa-th ig-green" aria-hidden="true"></i> Other Details</div>

                    <div class="col-md-12  ">
                        <div class="col-md-10">
                            <div class="form-group col-md-12">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.GeneralNotes, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.GeneralNotes, new { htmlAttributes = new { @class = "form-control HeaderBox multiline4", @id = "Notes", @rows = 4 } })
                                        @Html.ValidationMessageFor(model => model.GeneralNotes, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-1"></div>
                        <div class="col-md-1"></div>
                    </div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div>
                        @Html.Partial("Fileupload");
                    </div>


                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="form-group" hidden="hidden">
                        <div class="col-md-offset-2 col-md-10">
                            <input id="btnSave" type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                                            }
            </div>
        </div>
    </div>
    <div id="ExpensesDelete" hidden="hidden">
        @using (Ajax.BeginForm("DeletePayments", "SupplierPayments", new AjaxOptions { HttpMethod = "POST", OnSuccess = "DeleteSuccess", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form" }))
            {
            @Html.AntiForgeryToken()
            <div class="form-actions no-color">
                @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-4", Value = "0", id = "deleteId" })
                <input id="btnFormDelete" type="submit" value="Delete" class="btn btn-default" />
            </div>
        }
    </div>

    <div class="preloader" id="prelaoder">
        <div class="col-md-12">
            <div class="col-md-12">Loading </div>
            <div class="col-md-12" style="margin-left:5%;margin-top:-3%;"><img src="~/Content/images/loading.gif" class="preloaderImg" /></div>
        </div>

    </div>
</section>

@section Scripts {
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatable")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatableSelect")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jqueryunobtrusiveajaxvalidate")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/SupplierPayments")
@Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/select2")

}


